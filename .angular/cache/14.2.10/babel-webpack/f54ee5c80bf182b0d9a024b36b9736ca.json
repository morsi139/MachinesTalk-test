{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport \"../../utilities/globals/index.js\";\nimport { visit } from 'graphql';\nimport { ApolloLink } from \"../core/index.js\";\nimport { Observable, hasDirectives } from \"../../utilities/index.js\";\nimport { serializeFetchParameter } from \"./serializeFetchParameter.js\";\nimport { selectURI } from \"./selectURI.js\";\nimport { handleError, readMultipartBody, readJsonBody } from \"./parseAndCheckHttpResponse.js\";\nimport { checkFetcher } from \"./checkFetcher.js\";\nimport { selectHttpOptionsAndBodyInternal, defaultPrinter, fallbackHttpConfig } from \"./selectHttpOptionsAndBody.js\";\nimport { createSignalIfSupported } from \"./createSignalIfSupported.js\";\nimport { rewriteURIForGET } from \"./rewriteURIForGET.js\";\nimport { fromError } from \"../utils/index.js\";\nimport { maybe } from \"../../utilities/index.js\";\nvar backupFetch = maybe(function () {\n  return fetch;\n});\nexport var createHttpLink = function (linkOptions) {\n  if (linkOptions === void 0) {\n    linkOptions = {};\n  }\n\n  var _a = linkOptions.uri,\n      uri = _a === void 0 ? '/graphql' : _a,\n      preferredFetch = linkOptions.fetch,\n      _b = linkOptions.print,\n      print = _b === void 0 ? defaultPrinter : _b,\n      includeExtensions = linkOptions.includeExtensions,\n      preserveHeaderCase = linkOptions.preserveHeaderCase,\n      useGETForQueries = linkOptions.useGETForQueries,\n      _c = linkOptions.includeUnusedVariables,\n      includeUnusedVariables = _c === void 0 ? false : _c,\n      requestOptions = __rest(linkOptions, [\"uri\", \"fetch\", \"print\", \"includeExtensions\", \"preserveHeaderCase\", \"useGETForQueries\", \"includeUnusedVariables\"]);\n\n  if (__DEV__) {\n    checkFetcher(preferredFetch || backupFetch);\n  }\n\n  var linkConfig = {\n    http: {\n      includeExtensions: includeExtensions,\n      preserveHeaderCase: preserveHeaderCase\n    },\n    options: requestOptions.fetchOptions,\n    credentials: requestOptions.credentials,\n    headers: requestOptions.headers\n  };\n  return new ApolloLink(function (operation) {\n    var chosenURI = selectURI(operation, uri);\n    var context = operation.getContext();\n    var clientAwarenessHeaders = {};\n\n    if (context.clientAwareness) {\n      var _a = context.clientAwareness,\n          name_1 = _a.name,\n          version = _a.version;\n\n      if (name_1) {\n        clientAwarenessHeaders['apollographql-client-name'] = name_1;\n      }\n\n      if (version) {\n        clientAwarenessHeaders['apollographql-client-version'] = version;\n      }\n    }\n\n    var contextHeaders = __assign(__assign({}, clientAwarenessHeaders), context.headers);\n\n    var contextConfig = {\n      http: context.http,\n      options: context.fetchOptions,\n      credentials: context.credentials,\n      headers: contextHeaders\n    };\n\n    var _b = selectHttpOptionsAndBodyInternal(operation, print, fallbackHttpConfig, linkConfig, contextConfig),\n        options = _b.options,\n        body = _b.body;\n\n    if (body.variables && !includeUnusedVariables) {\n      var unusedNames_1 = new Set(Object.keys(body.variables));\n      visit(operation.query, {\n        Variable: function (node, _key, parent) {\n          if (parent && parent.kind !== 'VariableDefinition') {\n            unusedNames_1.delete(node.name.value);\n          }\n        }\n      });\n\n      if (unusedNames_1.size) {\n        body.variables = __assign({}, body.variables);\n        unusedNames_1.forEach(function (name) {\n          delete body.variables[name];\n        });\n      }\n    }\n\n    var controller;\n\n    if (!options.signal) {\n      var _c = createSignalIfSupported(),\n          _controller = _c.controller,\n          signal = _c.signal;\n\n      controller = _controller;\n      if (controller) options.signal = signal;\n    }\n\n    var definitionIsMutation = function (d) {\n      return d.kind === 'OperationDefinition' && d.operation === 'mutation';\n    };\n\n    if (useGETForQueries && !operation.query.definitions.some(definitionIsMutation)) {\n      options.method = 'GET';\n    }\n\n    if (hasDirectives(['defer'], operation.query)) {\n      options.headers = options.headers || {};\n      options.headers.accept = \"multipart/mixed; deferSpec=20220824, application/json\";\n    }\n\n    if (options.method === 'GET') {\n      var _d = rewriteURIForGET(chosenURI, body),\n          newURI = _d.newURI,\n          parseError = _d.parseError;\n\n      if (parseError) {\n        return fromError(parseError);\n      }\n\n      chosenURI = newURI;\n    } else {\n      try {\n        options.body = serializeFetchParameter(body, 'Payload');\n      } catch (parseError) {\n        return fromError(parseError);\n      }\n    }\n\n    return new Observable(function (observer) {\n      var currentFetch = preferredFetch || maybe(function () {\n        return fetch;\n      }) || backupFetch;\n      currentFetch(chosenURI, options).then(function (response) {\n        var _a;\n\n        operation.setContext({\n          response: response\n        });\n        var ctype = (_a = response.headers) === null || _a === void 0 ? void 0 : _a.get('content-type');\n\n        if (ctype !== null && /^multipart\\/mixed/i.test(ctype)) {\n          return readMultipartBody(response, observer);\n        } else {\n          return readJsonBody(response, operation, observer);\n        }\n      }).catch(function (err) {\n        return handleError(err, observer);\n      });\n      return function () {\n        if (controller) controller.abort();\n      };\n    });\n  });\n};","map":{"version":3,"names":["__assign","__rest","visit","ApolloLink","Observable","hasDirectives","serializeFetchParameter","selectURI","handleError","readMultipartBody","readJsonBody","checkFetcher","selectHttpOptionsAndBodyInternal","defaultPrinter","fallbackHttpConfig","createSignalIfSupported","rewriteURIForGET","fromError","maybe","backupFetch","fetch","createHttpLink","linkOptions","_a","uri","preferredFetch","_b","print","includeExtensions","preserveHeaderCase","useGETForQueries","_c","includeUnusedVariables","requestOptions","__DEV__","linkConfig","http","options","fetchOptions","credentials","headers","operation","chosenURI","context","getContext","clientAwarenessHeaders","clientAwareness","name_1","name","version","contextHeaders","contextConfig","body","variables","unusedNames_1","Set","Object","keys","query","Variable","node","_key","parent","kind","delete","value","size","forEach","controller","signal","_controller","definitionIsMutation","d","definitions","some","method","accept","_d","newURI","parseError","observer","currentFetch","then","response","setContext","ctype","get","test","catch","err","abort"],"sources":["F:/Bureau/Test_MachinesTalk/MachinesTalk/node_modules/@apollo/client/link/http/createHttpLink.js"],"sourcesContent":["import { __assign, __rest } from \"tslib\";\nimport \"../../utilities/globals/index.js\";\nimport { visit } from 'graphql';\nimport { ApolloLink } from \"../core/index.js\";\nimport { Observable, hasDirectives } from \"../../utilities/index.js\";\nimport { serializeFetchParameter } from \"./serializeFetchParameter.js\";\nimport { selectURI } from \"./selectURI.js\";\nimport { handleError, readMultipartBody, readJsonBody } from \"./parseAndCheckHttpResponse.js\";\nimport { checkFetcher } from \"./checkFetcher.js\";\nimport { selectHttpOptionsAndBodyInternal, defaultPrinter, fallbackHttpConfig } from \"./selectHttpOptionsAndBody.js\";\nimport { createSignalIfSupported } from \"./createSignalIfSupported.js\";\nimport { rewriteURIForGET } from \"./rewriteURIForGET.js\";\nimport { fromError } from \"../utils/index.js\";\nimport { maybe } from \"../../utilities/index.js\";\nvar backupFetch = maybe(function () { return fetch; });\nexport var createHttpLink = function (linkOptions) {\n    if (linkOptions === void 0) { linkOptions = {}; }\n    var _a = linkOptions.uri, uri = _a === void 0 ? '/graphql' : _a, preferredFetch = linkOptions.fetch, _b = linkOptions.print, print = _b === void 0 ? defaultPrinter : _b, includeExtensions = linkOptions.includeExtensions, preserveHeaderCase = linkOptions.preserveHeaderCase, useGETForQueries = linkOptions.useGETForQueries, _c = linkOptions.includeUnusedVariables, includeUnusedVariables = _c === void 0 ? false : _c, requestOptions = __rest(linkOptions, [\"uri\", \"fetch\", \"print\", \"includeExtensions\", \"preserveHeaderCase\", \"useGETForQueries\", \"includeUnusedVariables\"]);\n    if (__DEV__) {\n        checkFetcher(preferredFetch || backupFetch);\n    }\n    var linkConfig = {\n        http: { includeExtensions: includeExtensions, preserveHeaderCase: preserveHeaderCase },\n        options: requestOptions.fetchOptions,\n        credentials: requestOptions.credentials,\n        headers: requestOptions.headers,\n    };\n    return new ApolloLink(function (operation) {\n        var chosenURI = selectURI(operation, uri);\n        var context = operation.getContext();\n        var clientAwarenessHeaders = {};\n        if (context.clientAwareness) {\n            var _a = context.clientAwareness, name_1 = _a.name, version = _a.version;\n            if (name_1) {\n                clientAwarenessHeaders['apollographql-client-name'] = name_1;\n            }\n            if (version) {\n                clientAwarenessHeaders['apollographql-client-version'] = version;\n            }\n        }\n        var contextHeaders = __assign(__assign({}, clientAwarenessHeaders), context.headers);\n        var contextConfig = {\n            http: context.http,\n            options: context.fetchOptions,\n            credentials: context.credentials,\n            headers: contextHeaders,\n        };\n        var _b = selectHttpOptionsAndBodyInternal(operation, print, fallbackHttpConfig, linkConfig, contextConfig), options = _b.options, body = _b.body;\n        if (body.variables && !includeUnusedVariables) {\n            var unusedNames_1 = new Set(Object.keys(body.variables));\n            visit(operation.query, {\n                Variable: function (node, _key, parent) {\n                    if (parent && parent.kind !== 'VariableDefinition') {\n                        unusedNames_1.delete(node.name.value);\n                    }\n                },\n            });\n            if (unusedNames_1.size) {\n                body.variables = __assign({}, body.variables);\n                unusedNames_1.forEach(function (name) {\n                    delete body.variables[name];\n                });\n            }\n        }\n        var controller;\n        if (!options.signal) {\n            var _c = createSignalIfSupported(), _controller = _c.controller, signal = _c.signal;\n            controller = _controller;\n            if (controller)\n                options.signal = signal;\n        }\n        var definitionIsMutation = function (d) {\n            return d.kind === 'OperationDefinition' && d.operation === 'mutation';\n        };\n        if (useGETForQueries &&\n            !operation.query.definitions.some(definitionIsMutation)) {\n            options.method = 'GET';\n        }\n        if (hasDirectives(['defer'], operation.query)) {\n            options.headers = options.headers || {};\n            options.headers.accept = \"multipart/mixed; deferSpec=20220824, application/json\";\n        }\n        if (options.method === 'GET') {\n            var _d = rewriteURIForGET(chosenURI, body), newURI = _d.newURI, parseError = _d.parseError;\n            if (parseError) {\n                return fromError(parseError);\n            }\n            chosenURI = newURI;\n        }\n        else {\n            try {\n                options.body = serializeFetchParameter(body, 'Payload');\n            }\n            catch (parseError) {\n                return fromError(parseError);\n            }\n        }\n        return new Observable(function (observer) {\n            var currentFetch = preferredFetch || maybe(function () { return fetch; }) || backupFetch;\n            currentFetch(chosenURI, options)\n                .then(function (response) {\n                var _a;\n                operation.setContext({ response: response });\n                var ctype = (_a = response.headers) === null || _a === void 0 ? void 0 : _a.get('content-type');\n                if (ctype !== null && /^multipart\\/mixed/i.test(ctype)) {\n                    return readMultipartBody(response, observer);\n                }\n                else {\n                    return readJsonBody(response, operation, observer);\n                }\n            })\n                .catch(function (err) { return handleError(err, observer); });\n            return function () {\n                if (controller)\n                    controller.abort();\n            };\n        });\n    });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}