{"ast":null,"code":"import { __assign, __spreadArray } from \"tslib\";\nimport { visit } from \"graphql\";\nimport { wrap } from \"optimism\";\nimport { getFragmentDefinitions } from \"../../utilities/index.js\";\nexport function createFragmentRegistry() {\n  var fragments = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    fragments[_i] = arguments[_i];\n  }\n\n  return new (FragmentRegistry.bind.apply(FragmentRegistry, __spreadArray([void 0], fragments, false)))();\n}\nvar arrayLikeForEach = Array.prototype.forEach;\n\nvar FragmentRegistry = function () {\n  function FragmentRegistry() {\n    var fragments = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      fragments[_i] = arguments[_i];\n    }\n\n    this.registry = Object.create(null);\n    this.resetCaches();\n\n    if (fragments.length) {\n      this.register.apply(this, fragments);\n    }\n  }\n\n  FragmentRegistry.prototype.register = function () {\n    var _this = this;\n\n    var definitions = new Map();\n    arrayLikeForEach.call(arguments, function (doc) {\n      getFragmentDefinitions(doc).forEach(function (node) {\n        definitions.set(node.name.value, node);\n      });\n    });\n    definitions.forEach(function (node, name) {\n      if (node !== _this.registry[name]) {\n        _this.registry[name] = node;\n\n        _this.invalidate(name);\n      }\n    });\n    return this;\n  };\n\n  FragmentRegistry.prototype.invalidate = function (name) {};\n\n  FragmentRegistry.prototype.resetCaches = function () {\n    this.invalidate = (this.lookup = this.cacheUnaryMethod(\"lookup\")).dirty;\n    this.transform = this.cacheUnaryMethod(\"transform\");\n    this.findFragmentSpreads = this.cacheUnaryMethod(\"findFragmentSpreads\");\n  };\n\n  FragmentRegistry.prototype.cacheUnaryMethod = function (name) {\n    var registry = this;\n    var originalMethod = FragmentRegistry.prototype[name];\n    return wrap(function () {\n      return originalMethod.apply(registry, arguments);\n    }, {\n      makeCacheKey: function (arg) {\n        return arg;\n      }\n    });\n  };\n\n  FragmentRegistry.prototype.lookup = function (fragmentName) {\n    return this.registry[fragmentName] || null;\n  };\n\n  FragmentRegistry.prototype.transform = function (document) {\n    var _this = this;\n\n    var defined = new Map();\n    getFragmentDefinitions(document).forEach(function (def) {\n      defined.set(def.name.value, def);\n    });\n    var unbound = new Set();\n\n    var enqueue = function (spreadName) {\n      if (!defined.has(spreadName)) {\n        unbound.add(spreadName);\n      }\n    };\n\n    var enqueueChildSpreads = function (node) {\n      return Object.keys(_this.findFragmentSpreads(node)).forEach(enqueue);\n    };\n\n    enqueueChildSpreads(document);\n    var missing = [];\n    var map = Object.create(null);\n    unbound.forEach(function (fragmentName) {\n      var knownFragmentDef = defined.get(fragmentName);\n\n      if (knownFragmentDef) {\n        enqueueChildSpreads(map[fragmentName] = knownFragmentDef);\n      } else {\n        missing.push(fragmentName);\n\n        var def = _this.lookup(fragmentName);\n\n        if (def) {\n          enqueueChildSpreads(map[fragmentName] = def);\n        }\n      }\n    });\n\n    if (missing.length) {\n      var defsToAppend_1 = [];\n      missing.forEach(function (name) {\n        var def = map[name];\n\n        if (def) {\n          defsToAppend_1.push(def);\n        }\n      });\n\n      if (defsToAppend_1.length) {\n        document = __assign(__assign({}, document), {\n          definitions: document.definitions.concat(defsToAppend_1)\n        });\n      }\n    }\n\n    return document;\n  };\n\n  FragmentRegistry.prototype.findFragmentSpreads = function (root) {\n    var spreads = Object.create(null);\n    visit(root, {\n      FragmentSpread: function (node) {\n        spreads[node.name.value] = node;\n      }\n    });\n    return spreads;\n  };\n\n  return FragmentRegistry;\n}();","map":{"version":3,"names":["__assign","__spreadArray","visit","wrap","getFragmentDefinitions","createFragmentRegistry","fragments","_i","arguments","length","FragmentRegistry","bind","apply","arrayLikeForEach","Array","prototype","forEach","registry","Object","create","resetCaches","register","_this","definitions","Map","call","doc","node","set","name","value","invalidate","lookup","cacheUnaryMethod","dirty","transform","findFragmentSpreads","originalMethod","makeCacheKey","arg","fragmentName","document","defined","def","unbound","Set","enqueue","spreadName","has","add","enqueueChildSpreads","keys","missing","map","knownFragmentDef","get","push","defsToAppend_1","concat","root","spreads","FragmentSpread"],"sources":["F:/Bureau/Test_MachinesTalk/MachinesTalk/node_modules/@apollo/client/cache/inmemory/fragmentRegistry.js"],"sourcesContent":["import { __assign, __spreadArray } from \"tslib\";\nimport { visit, } from \"graphql\";\nimport { wrap } from \"optimism\";\nimport { getFragmentDefinitions } from \"../../utilities/index.js\";\nexport function createFragmentRegistry() {\n    var fragments = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        fragments[_i] = arguments[_i];\n    }\n    return new (FragmentRegistry.bind.apply(FragmentRegistry, __spreadArray([void 0], fragments, false)))();\n}\nvar arrayLikeForEach = Array.prototype.forEach;\nvar FragmentRegistry = (function () {\n    function FragmentRegistry() {\n        var fragments = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            fragments[_i] = arguments[_i];\n        }\n        this.registry = Object.create(null);\n        this.resetCaches();\n        if (fragments.length) {\n            this.register.apply(this, fragments);\n        }\n    }\n    FragmentRegistry.prototype.register = function () {\n        var _this = this;\n        var definitions = new Map();\n        arrayLikeForEach.call(arguments, function (doc) {\n            getFragmentDefinitions(doc).forEach(function (node) {\n                definitions.set(node.name.value, node);\n            });\n        });\n        definitions.forEach(function (node, name) {\n            if (node !== _this.registry[name]) {\n                _this.registry[name] = node;\n                _this.invalidate(name);\n            }\n        });\n        return this;\n    };\n    FragmentRegistry.prototype.invalidate = function (name) { };\n    FragmentRegistry.prototype.resetCaches = function () {\n        this.invalidate = (this.lookup = this.cacheUnaryMethod(\"lookup\")).dirty;\n        this.transform = this.cacheUnaryMethod(\"transform\");\n        this.findFragmentSpreads = this.cacheUnaryMethod(\"findFragmentSpreads\");\n    };\n    FragmentRegistry.prototype.cacheUnaryMethod = function (name) {\n        var registry = this;\n        var originalMethod = FragmentRegistry.prototype[name];\n        return wrap(function () {\n            return originalMethod.apply(registry, arguments);\n        }, {\n            makeCacheKey: function (arg) { return arg; },\n        });\n    };\n    FragmentRegistry.prototype.lookup = function (fragmentName) {\n        return this.registry[fragmentName] || null;\n    };\n    FragmentRegistry.prototype.transform = function (document) {\n        var _this = this;\n        var defined = new Map();\n        getFragmentDefinitions(document).forEach(function (def) {\n            defined.set(def.name.value, def);\n        });\n        var unbound = new Set();\n        var enqueue = function (spreadName) {\n            if (!defined.has(spreadName)) {\n                unbound.add(spreadName);\n            }\n        };\n        var enqueueChildSpreads = function (node) { return Object.keys(_this.findFragmentSpreads(node)).forEach(enqueue); };\n        enqueueChildSpreads(document);\n        var missing = [];\n        var map = Object.create(null);\n        unbound.forEach(function (fragmentName) {\n            var knownFragmentDef = defined.get(fragmentName);\n            if (knownFragmentDef) {\n                enqueueChildSpreads(map[fragmentName] = knownFragmentDef);\n            }\n            else {\n                missing.push(fragmentName);\n                var def = _this.lookup(fragmentName);\n                if (def) {\n                    enqueueChildSpreads(map[fragmentName] = def);\n                }\n            }\n        });\n        if (missing.length) {\n            var defsToAppend_1 = [];\n            missing.forEach(function (name) {\n                var def = map[name];\n                if (def) {\n                    defsToAppend_1.push(def);\n                }\n            });\n            if (defsToAppend_1.length) {\n                document = __assign(__assign({}, document), { definitions: document.definitions.concat(defsToAppend_1) });\n            }\n        }\n        return document;\n    };\n    FragmentRegistry.prototype.findFragmentSpreads = function (root) {\n        var spreads = Object.create(null);\n        visit(root, {\n            FragmentSpread: function (node) {\n                spreads[node.name.value] = node;\n            },\n        });\n        return spreads;\n    };\n    return FragmentRegistry;\n}());\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}