{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { invariant } from \"../../utilities/globals/index.js\";\nimport \"./fixPolyfills.js\";\nimport { wrap } from 'optimism';\nimport { equal } from '@wry/equality';\nimport { ApolloCache } from \"../core/cache.js\";\nimport { MissingFieldError } from \"../core/types/common.js\";\nimport { addTypenameToDocument, isReference } from \"../../utilities/index.js\";\nimport { StoreReader } from \"./readFromStore.js\";\nimport { StoreWriter } from \"./writeToStore.js\";\nimport { EntityStore, supportsResultCaching } from \"./entityStore.js\";\nimport { makeVar, forgetCache, recallCache } from \"./reactiveVars.js\";\nimport { Policies } from \"./policies.js\";\nimport { hasOwn, normalizeConfig, shouldCanonizeResults } from \"./helpers.js\";\nimport { canonicalStringify } from \"./object-canon.js\";\n\nvar InMemoryCache = function (_super) {\n  __extends(InMemoryCache, _super);\n\n  function InMemoryCache(config) {\n    if (config === void 0) {\n      config = {};\n    }\n\n    var _this = _super.call(this) || this;\n\n    _this.watches = new Set();\n    _this.typenameDocumentCache = new Map();\n    _this.makeVar = makeVar;\n    _this.txCount = 0;\n    _this.config = normalizeConfig(config);\n    _this.addTypename = !!_this.config.addTypename;\n    _this.policies = new Policies({\n      cache: _this,\n      dataIdFromObject: _this.config.dataIdFromObject,\n      possibleTypes: _this.config.possibleTypes,\n      typePolicies: _this.config.typePolicies\n    });\n\n    _this.init();\n\n    return _this;\n  }\n\n  InMemoryCache.prototype.init = function () {\n    var rootStore = this.data = new EntityStore.Root({\n      policies: this.policies,\n      resultCaching: this.config.resultCaching\n    });\n    this.optimisticData = rootStore.stump;\n    this.resetResultCache();\n  };\n\n  InMemoryCache.prototype.resetResultCache = function (resetResultIdentities) {\n    var _this = this;\n\n    var previousReader = this.storeReader;\n    var fragments = this.config.fragments;\n    this.storeWriter = new StoreWriter(this, this.storeReader = new StoreReader({\n      cache: this,\n      addTypename: this.addTypename,\n      resultCacheMaxSize: this.config.resultCacheMaxSize,\n      canonizeResults: shouldCanonizeResults(this.config),\n      canon: resetResultIdentities ? void 0 : previousReader && previousReader.canon,\n      fragments: fragments\n    }), fragments);\n    this.maybeBroadcastWatch = wrap(function (c, options) {\n      return _this.broadcastWatch(c, options);\n    }, {\n      max: this.config.resultCacheMaxSize,\n      makeCacheKey: function (c) {\n        var store = c.optimistic ? _this.optimisticData : _this.data;\n\n        if (supportsResultCaching(store)) {\n          var optimistic = c.optimistic,\n              id = c.id,\n              variables = c.variables;\n          return store.makeCacheKey(c.query, c.callback, canonicalStringify({\n            optimistic: optimistic,\n            id: id,\n            variables: variables\n          }));\n        }\n      }\n    });\n    new Set([this.data.group, this.optimisticData.group]).forEach(function (group) {\n      return group.resetCaching();\n    });\n  };\n\n  InMemoryCache.prototype.restore = function (data) {\n    this.init();\n    if (data) this.data.replace(data);\n    return this;\n  };\n\n  InMemoryCache.prototype.extract = function (optimistic) {\n    if (optimistic === void 0) {\n      optimistic = false;\n    }\n\n    return (optimistic ? this.optimisticData : this.data).extract();\n  };\n\n  InMemoryCache.prototype.read = function (options) {\n    var _a = options.returnPartialData,\n        returnPartialData = _a === void 0 ? false : _a;\n\n    try {\n      return this.storeReader.diffQueryAgainstStore(__assign(__assign({}, options), {\n        store: options.optimistic ? this.optimisticData : this.data,\n        config: this.config,\n        returnPartialData: returnPartialData\n      })).result || null;\n    } catch (e) {\n      if (e instanceof MissingFieldError) {\n        return null;\n      }\n\n      throw e;\n    }\n  };\n\n  InMemoryCache.prototype.write = function (options) {\n    try {\n      ++this.txCount;\n      return this.storeWriter.writeToStore(this.data, options);\n    } finally {\n      if (! --this.txCount && options.broadcast !== false) {\n        this.broadcastWatches();\n      }\n    }\n  };\n\n  InMemoryCache.prototype.modify = function (options) {\n    if (hasOwn.call(options, \"id\") && !options.id) {\n      return false;\n    }\n\n    var store = options.optimistic ? this.optimisticData : this.data;\n\n    try {\n      ++this.txCount;\n      return store.modify(options.id || \"ROOT_QUERY\", options.fields);\n    } finally {\n      if (! --this.txCount && options.broadcast !== false) {\n        this.broadcastWatches();\n      }\n    }\n  };\n\n  InMemoryCache.prototype.diff = function (options) {\n    return this.storeReader.diffQueryAgainstStore(__assign(__assign({}, options), {\n      store: options.optimistic ? this.optimisticData : this.data,\n      rootId: options.id || \"ROOT_QUERY\",\n      config: this.config\n    }));\n  };\n\n  InMemoryCache.prototype.watch = function (watch) {\n    var _this = this;\n\n    if (!this.watches.size) {\n      recallCache(this);\n    }\n\n    this.watches.add(watch);\n\n    if (watch.immediate) {\n      this.maybeBroadcastWatch(watch);\n    }\n\n    return function () {\n      if (_this.watches.delete(watch) && !_this.watches.size) {\n        forgetCache(_this);\n      }\n\n      _this.maybeBroadcastWatch.forget(watch);\n    };\n  };\n\n  InMemoryCache.prototype.gc = function (options) {\n    canonicalStringify.reset();\n    var ids = this.optimisticData.gc();\n\n    if (options && !this.txCount) {\n      if (options.resetResultCache) {\n        this.resetResultCache(options.resetResultIdentities);\n      } else if (options.resetResultIdentities) {\n        this.storeReader.resetCanon();\n      }\n    }\n\n    return ids;\n  };\n\n  InMemoryCache.prototype.retain = function (rootId, optimistic) {\n    return (optimistic ? this.optimisticData : this.data).retain(rootId);\n  };\n\n  InMemoryCache.prototype.release = function (rootId, optimistic) {\n    return (optimistic ? this.optimisticData : this.data).release(rootId);\n  };\n\n  InMemoryCache.prototype.identify = function (object) {\n    if (isReference(object)) return object.__ref;\n\n    try {\n      return this.policies.identify(object)[0];\n    } catch (e) {\n      __DEV__ && invariant.warn(e);\n    }\n  };\n\n  InMemoryCache.prototype.evict = function (options) {\n    if (!options.id) {\n      if (hasOwn.call(options, \"id\")) {\n        return false;\n      }\n\n      options = __assign(__assign({}, options), {\n        id: \"ROOT_QUERY\"\n      });\n    }\n\n    try {\n      ++this.txCount;\n      return this.optimisticData.evict(options, this.data);\n    } finally {\n      if (! --this.txCount && options.broadcast !== false) {\n        this.broadcastWatches();\n      }\n    }\n  };\n\n  InMemoryCache.prototype.reset = function (options) {\n    var _this = this;\n\n    this.init();\n    canonicalStringify.reset();\n\n    if (options && options.discardWatches) {\n      this.watches.forEach(function (watch) {\n        return _this.maybeBroadcastWatch.forget(watch);\n      });\n      this.watches.clear();\n      forgetCache(this);\n    } else {\n      this.broadcastWatches();\n    }\n\n    return Promise.resolve();\n  };\n\n  InMemoryCache.prototype.removeOptimistic = function (idToRemove) {\n    var newOptimisticData = this.optimisticData.removeLayer(idToRemove);\n\n    if (newOptimisticData !== this.optimisticData) {\n      this.optimisticData = newOptimisticData;\n      this.broadcastWatches();\n    }\n  };\n\n  InMemoryCache.prototype.batch = function (options) {\n    var _this = this;\n\n    var update = options.update,\n        _a = options.optimistic,\n        optimistic = _a === void 0 ? true : _a,\n        removeOptimistic = options.removeOptimistic,\n        onWatchUpdated = options.onWatchUpdated;\n    var updateResult;\n\n    var perform = function (layer) {\n      var _a = _this,\n          data = _a.data,\n          optimisticData = _a.optimisticData;\n      ++_this.txCount;\n\n      if (layer) {\n        _this.data = _this.optimisticData = layer;\n      }\n\n      try {\n        return updateResult = update(_this);\n      } finally {\n        --_this.txCount;\n        _this.data = data;\n        _this.optimisticData = optimisticData;\n      }\n    };\n\n    var alreadyDirty = new Set();\n\n    if (onWatchUpdated && !this.txCount) {\n      this.broadcastWatches(__assign(__assign({}, options), {\n        onWatchUpdated: function (watch) {\n          alreadyDirty.add(watch);\n          return false;\n        }\n      }));\n    }\n\n    if (typeof optimistic === 'string') {\n      this.optimisticData = this.optimisticData.addLayer(optimistic, perform);\n    } else if (optimistic === false) {\n      perform(this.data);\n    } else {\n      perform();\n    }\n\n    if (typeof removeOptimistic === \"string\") {\n      this.optimisticData = this.optimisticData.removeLayer(removeOptimistic);\n    }\n\n    if (onWatchUpdated && alreadyDirty.size) {\n      this.broadcastWatches(__assign(__assign({}, options), {\n        onWatchUpdated: function (watch, diff) {\n          var result = onWatchUpdated.call(this, watch, diff);\n\n          if (result !== false) {\n            alreadyDirty.delete(watch);\n          }\n\n          return result;\n        }\n      }));\n\n      if (alreadyDirty.size) {\n        alreadyDirty.forEach(function (watch) {\n          return _this.maybeBroadcastWatch.dirty(watch);\n        });\n      }\n    } else {\n      this.broadcastWatches(options);\n    }\n\n    return updateResult;\n  };\n\n  InMemoryCache.prototype.performTransaction = function (update, optimisticId) {\n    return this.batch({\n      update: update,\n      optimistic: optimisticId || optimisticId !== null\n    });\n  };\n\n  InMemoryCache.prototype.transformDocument = function (document) {\n    if (this.addTypename) {\n      var result = this.typenameDocumentCache.get(document);\n\n      if (!result) {\n        result = addTypenameToDocument(document);\n        this.typenameDocumentCache.set(document, result);\n        this.typenameDocumentCache.set(result, result);\n      }\n\n      return result;\n    }\n\n    return document;\n  };\n\n  InMemoryCache.prototype.transformForLink = function (document) {\n    var fragments = this.config.fragments;\n    return fragments ? fragments.transform(document) : document;\n  };\n\n  InMemoryCache.prototype.broadcastWatches = function (options) {\n    var _this = this;\n\n    if (!this.txCount) {\n      this.watches.forEach(function (c) {\n        return _this.maybeBroadcastWatch(c, options);\n      });\n    }\n  };\n\n  InMemoryCache.prototype.broadcastWatch = function (c, options) {\n    var lastDiff = c.lastDiff;\n    var diff = this.diff(c);\n\n    if (options) {\n      if (c.optimistic && typeof options.optimistic === \"string\") {\n        diff.fromOptimisticTransaction = true;\n      }\n\n      if (options.onWatchUpdated && options.onWatchUpdated.call(this, c, diff, lastDiff) === false) {\n        return;\n      }\n    }\n\n    if (!lastDiff || !equal(lastDiff.result, diff.result)) {\n      c.callback(c.lastDiff = diff, lastDiff);\n    }\n  };\n\n  return InMemoryCache;\n}(ApolloCache);\n\nexport { InMemoryCache };","map":{"version":3,"names":["__assign","__extends","invariant","wrap","equal","ApolloCache","MissingFieldError","addTypenameToDocument","isReference","StoreReader","StoreWriter","EntityStore","supportsResultCaching","makeVar","forgetCache","recallCache","Policies","hasOwn","normalizeConfig","shouldCanonizeResults","canonicalStringify","InMemoryCache","_super","config","_this","call","watches","Set","typenameDocumentCache","Map","txCount","addTypename","policies","cache","dataIdFromObject","possibleTypes","typePolicies","init","prototype","rootStore","data","Root","resultCaching","optimisticData","stump","resetResultCache","resetResultIdentities","previousReader","storeReader","fragments","storeWriter","resultCacheMaxSize","canonizeResults","canon","maybeBroadcastWatch","c","options","broadcastWatch","max","makeCacheKey","store","optimistic","id","variables","query","callback","group","forEach","resetCaching","restore","replace","extract","read","_a","returnPartialData","diffQueryAgainstStore","result","e","write","writeToStore","broadcast","broadcastWatches","modify","fields","diff","rootId","watch","size","add","immediate","delete","forget","gc","reset","ids","resetCanon","retain","release","identify","object","__ref","__DEV__","warn","evict","discardWatches","clear","Promise","resolve","removeOptimistic","idToRemove","newOptimisticData","removeLayer","batch","update","onWatchUpdated","updateResult","perform","layer","alreadyDirty","addLayer","dirty","performTransaction","optimisticId","transformDocument","document","get","set","transformForLink","transform","lastDiff","fromOptimisticTransaction"],"sources":["F:/Bureau/Test_MachinesTalk/MachinesTalk/node_modules/@apollo/client/cache/inmemory/inMemoryCache.js"],"sourcesContent":["import { __assign, __extends } from \"tslib\";\nimport { invariant } from \"../../utilities/globals/index.js\";\nimport \"./fixPolyfills.js\";\nimport { wrap } from 'optimism';\nimport { equal } from '@wry/equality';\nimport { ApolloCache } from \"../core/cache.js\";\nimport { MissingFieldError } from \"../core/types/common.js\";\nimport { addTypenameToDocument, isReference, } from \"../../utilities/index.js\";\nimport { StoreReader } from \"./readFromStore.js\";\nimport { StoreWriter } from \"./writeToStore.js\";\nimport { EntityStore, supportsResultCaching } from \"./entityStore.js\";\nimport { makeVar, forgetCache, recallCache } from \"./reactiveVars.js\";\nimport { Policies } from \"./policies.js\";\nimport { hasOwn, normalizeConfig, shouldCanonizeResults } from \"./helpers.js\";\nimport { canonicalStringify } from \"./object-canon.js\";\nvar InMemoryCache = (function (_super) {\n    __extends(InMemoryCache, _super);\n    function InMemoryCache(config) {\n        if (config === void 0) { config = {}; }\n        var _this = _super.call(this) || this;\n        _this.watches = new Set();\n        _this.typenameDocumentCache = new Map();\n        _this.makeVar = makeVar;\n        _this.txCount = 0;\n        _this.config = normalizeConfig(config);\n        _this.addTypename = !!_this.config.addTypename;\n        _this.policies = new Policies({\n            cache: _this,\n            dataIdFromObject: _this.config.dataIdFromObject,\n            possibleTypes: _this.config.possibleTypes,\n            typePolicies: _this.config.typePolicies,\n        });\n        _this.init();\n        return _this;\n    }\n    InMemoryCache.prototype.init = function () {\n        var rootStore = this.data = new EntityStore.Root({\n            policies: this.policies,\n            resultCaching: this.config.resultCaching,\n        });\n        this.optimisticData = rootStore.stump;\n        this.resetResultCache();\n    };\n    InMemoryCache.prototype.resetResultCache = function (resetResultIdentities) {\n        var _this = this;\n        var previousReader = this.storeReader;\n        var fragments = this.config.fragments;\n        this.storeWriter = new StoreWriter(this, this.storeReader = new StoreReader({\n            cache: this,\n            addTypename: this.addTypename,\n            resultCacheMaxSize: this.config.resultCacheMaxSize,\n            canonizeResults: shouldCanonizeResults(this.config),\n            canon: resetResultIdentities\n                ? void 0\n                : previousReader && previousReader.canon,\n            fragments: fragments,\n        }), fragments);\n        this.maybeBroadcastWatch = wrap(function (c, options) {\n            return _this.broadcastWatch(c, options);\n        }, {\n            max: this.config.resultCacheMaxSize,\n            makeCacheKey: function (c) {\n                var store = c.optimistic ? _this.optimisticData : _this.data;\n                if (supportsResultCaching(store)) {\n                    var optimistic = c.optimistic, id = c.id, variables = c.variables;\n                    return store.makeCacheKey(c.query, c.callback, canonicalStringify({ optimistic: optimistic, id: id, variables: variables }));\n                }\n            }\n        });\n        new Set([\n            this.data.group,\n            this.optimisticData.group,\n        ]).forEach(function (group) { return group.resetCaching(); });\n    };\n    InMemoryCache.prototype.restore = function (data) {\n        this.init();\n        if (data)\n            this.data.replace(data);\n        return this;\n    };\n    InMemoryCache.prototype.extract = function (optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return (optimistic ? this.optimisticData : this.data).extract();\n    };\n    InMemoryCache.prototype.read = function (options) {\n        var _a = options.returnPartialData, returnPartialData = _a === void 0 ? false : _a;\n        try {\n            return this.storeReader.diffQueryAgainstStore(__assign(__assign({}, options), { store: options.optimistic ? this.optimisticData : this.data, config: this.config, returnPartialData: returnPartialData })).result || null;\n        }\n        catch (e) {\n            if (e instanceof MissingFieldError) {\n                return null;\n            }\n            throw e;\n        }\n    };\n    InMemoryCache.prototype.write = function (options) {\n        try {\n            ++this.txCount;\n            return this.storeWriter.writeToStore(this.data, options);\n        }\n        finally {\n            if (!--this.txCount && options.broadcast !== false) {\n                this.broadcastWatches();\n            }\n        }\n    };\n    InMemoryCache.prototype.modify = function (options) {\n        if (hasOwn.call(options, \"id\") && !options.id) {\n            return false;\n        }\n        var store = options.optimistic\n            ? this.optimisticData\n            : this.data;\n        try {\n            ++this.txCount;\n            return store.modify(options.id || \"ROOT_QUERY\", options.fields);\n        }\n        finally {\n            if (!--this.txCount && options.broadcast !== false) {\n                this.broadcastWatches();\n            }\n        }\n    };\n    InMemoryCache.prototype.diff = function (options) {\n        return this.storeReader.diffQueryAgainstStore(__assign(__assign({}, options), { store: options.optimistic ? this.optimisticData : this.data, rootId: options.id || \"ROOT_QUERY\", config: this.config }));\n    };\n    InMemoryCache.prototype.watch = function (watch) {\n        var _this = this;\n        if (!this.watches.size) {\n            recallCache(this);\n        }\n        this.watches.add(watch);\n        if (watch.immediate) {\n            this.maybeBroadcastWatch(watch);\n        }\n        return function () {\n            if (_this.watches.delete(watch) && !_this.watches.size) {\n                forgetCache(_this);\n            }\n            _this.maybeBroadcastWatch.forget(watch);\n        };\n    };\n    InMemoryCache.prototype.gc = function (options) {\n        canonicalStringify.reset();\n        var ids = this.optimisticData.gc();\n        if (options && !this.txCount) {\n            if (options.resetResultCache) {\n                this.resetResultCache(options.resetResultIdentities);\n            }\n            else if (options.resetResultIdentities) {\n                this.storeReader.resetCanon();\n            }\n        }\n        return ids;\n    };\n    InMemoryCache.prototype.retain = function (rootId, optimistic) {\n        return (optimistic ? this.optimisticData : this.data).retain(rootId);\n    };\n    InMemoryCache.prototype.release = function (rootId, optimistic) {\n        return (optimistic ? this.optimisticData : this.data).release(rootId);\n    };\n    InMemoryCache.prototype.identify = function (object) {\n        if (isReference(object))\n            return object.__ref;\n        try {\n            return this.policies.identify(object)[0];\n        }\n        catch (e) {\n            __DEV__ && invariant.warn(e);\n        }\n    };\n    InMemoryCache.prototype.evict = function (options) {\n        if (!options.id) {\n            if (hasOwn.call(options, \"id\")) {\n                return false;\n            }\n            options = __assign(__assign({}, options), { id: \"ROOT_QUERY\" });\n        }\n        try {\n            ++this.txCount;\n            return this.optimisticData.evict(options, this.data);\n        }\n        finally {\n            if (!--this.txCount && options.broadcast !== false) {\n                this.broadcastWatches();\n            }\n        }\n    };\n    InMemoryCache.prototype.reset = function (options) {\n        var _this = this;\n        this.init();\n        canonicalStringify.reset();\n        if (options && options.discardWatches) {\n            this.watches.forEach(function (watch) { return _this.maybeBroadcastWatch.forget(watch); });\n            this.watches.clear();\n            forgetCache(this);\n        }\n        else {\n            this.broadcastWatches();\n        }\n        return Promise.resolve();\n    };\n    InMemoryCache.prototype.removeOptimistic = function (idToRemove) {\n        var newOptimisticData = this.optimisticData.removeLayer(idToRemove);\n        if (newOptimisticData !== this.optimisticData) {\n            this.optimisticData = newOptimisticData;\n            this.broadcastWatches();\n        }\n    };\n    InMemoryCache.prototype.batch = function (options) {\n        var _this = this;\n        var update = options.update, _a = options.optimistic, optimistic = _a === void 0 ? true : _a, removeOptimistic = options.removeOptimistic, onWatchUpdated = options.onWatchUpdated;\n        var updateResult;\n        var perform = function (layer) {\n            var _a = _this, data = _a.data, optimisticData = _a.optimisticData;\n            ++_this.txCount;\n            if (layer) {\n                _this.data = _this.optimisticData = layer;\n            }\n            try {\n                return updateResult = update(_this);\n            }\n            finally {\n                --_this.txCount;\n                _this.data = data;\n                _this.optimisticData = optimisticData;\n            }\n        };\n        var alreadyDirty = new Set();\n        if (onWatchUpdated && !this.txCount) {\n            this.broadcastWatches(__assign(__assign({}, options), { onWatchUpdated: function (watch) {\n                    alreadyDirty.add(watch);\n                    return false;\n                } }));\n        }\n        if (typeof optimistic === 'string') {\n            this.optimisticData = this.optimisticData.addLayer(optimistic, perform);\n        }\n        else if (optimistic === false) {\n            perform(this.data);\n        }\n        else {\n            perform();\n        }\n        if (typeof removeOptimistic === \"string\") {\n            this.optimisticData = this.optimisticData.removeLayer(removeOptimistic);\n        }\n        if (onWatchUpdated && alreadyDirty.size) {\n            this.broadcastWatches(__assign(__assign({}, options), { onWatchUpdated: function (watch, diff) {\n                    var result = onWatchUpdated.call(this, watch, diff);\n                    if (result !== false) {\n                        alreadyDirty.delete(watch);\n                    }\n                    return result;\n                } }));\n            if (alreadyDirty.size) {\n                alreadyDirty.forEach(function (watch) { return _this.maybeBroadcastWatch.dirty(watch); });\n            }\n        }\n        else {\n            this.broadcastWatches(options);\n        }\n        return updateResult;\n    };\n    InMemoryCache.prototype.performTransaction = function (update, optimisticId) {\n        return this.batch({\n            update: update,\n            optimistic: optimisticId || (optimisticId !== null),\n        });\n    };\n    InMemoryCache.prototype.transformDocument = function (document) {\n        if (this.addTypename) {\n            var result = this.typenameDocumentCache.get(document);\n            if (!result) {\n                result = addTypenameToDocument(document);\n                this.typenameDocumentCache.set(document, result);\n                this.typenameDocumentCache.set(result, result);\n            }\n            return result;\n        }\n        return document;\n    };\n    InMemoryCache.prototype.transformForLink = function (document) {\n        var fragments = this.config.fragments;\n        return fragments\n            ? fragments.transform(document)\n            : document;\n    };\n    InMemoryCache.prototype.broadcastWatches = function (options) {\n        var _this = this;\n        if (!this.txCount) {\n            this.watches.forEach(function (c) { return _this.maybeBroadcastWatch(c, options); });\n        }\n    };\n    InMemoryCache.prototype.broadcastWatch = function (c, options) {\n        var lastDiff = c.lastDiff;\n        var diff = this.diff(c);\n        if (options) {\n            if (c.optimistic &&\n                typeof options.optimistic === \"string\") {\n                diff.fromOptimisticTransaction = true;\n            }\n            if (options.onWatchUpdated &&\n                options.onWatchUpdated.call(this, c, diff, lastDiff) === false) {\n                return;\n            }\n        }\n        if (!lastDiff || !equal(lastDiff.result, diff.result)) {\n            c.callback(c.lastDiff = diff, lastDiff);\n        }\n    };\n    return InMemoryCache;\n}(ApolloCache));\nexport { InMemoryCache };\n"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kCAA1B;AACA,OAAO,mBAAP;AACA,SAASC,IAAT,QAAqB,UAArB;AACA,SAASC,KAAT,QAAsB,eAAtB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,iBAAT,QAAkC,yBAAlC;AACA,SAASC,qBAAT,EAAgCC,WAAhC,QAAoD,0BAApD;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,SAASC,WAAT,EAAsBC,qBAAtB,QAAmD,kBAAnD;AACA,SAASC,OAAT,EAAkBC,WAAlB,EAA+BC,WAA/B,QAAkD,mBAAlD;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,SAASC,MAAT,EAAiBC,eAAjB,EAAkCC,qBAAlC,QAA+D,cAA/D;AACA,SAASC,kBAAT,QAAmC,mBAAnC;;AACA,IAAIC,aAAa,GAAI,UAAUC,MAAV,EAAkB;EACnCrB,SAAS,CAACoB,aAAD,EAAgBC,MAAhB,CAAT;;EACA,SAASD,aAAT,CAAuBE,MAAvB,EAA+B;IAC3B,IAAIA,MAAM,KAAK,KAAK,CAApB,EAAuB;MAAEA,MAAM,GAAG,EAAT;IAAc;;IACvC,IAAIC,KAAK,GAAGF,MAAM,CAACG,IAAP,CAAY,IAAZ,KAAqB,IAAjC;;IACAD,KAAK,CAACE,OAAN,GAAgB,IAAIC,GAAJ,EAAhB;IACAH,KAAK,CAACI,qBAAN,GAA8B,IAAIC,GAAJ,EAA9B;IACAL,KAAK,CAACX,OAAN,GAAgBA,OAAhB;IACAW,KAAK,CAACM,OAAN,GAAgB,CAAhB;IACAN,KAAK,CAACD,MAAN,GAAeL,eAAe,CAACK,MAAD,CAA9B;IACAC,KAAK,CAACO,WAAN,GAAoB,CAAC,CAACP,KAAK,CAACD,MAAN,CAAaQ,WAAnC;IACAP,KAAK,CAACQ,QAAN,GAAiB,IAAIhB,QAAJ,CAAa;MAC1BiB,KAAK,EAAET,KADmB;MAE1BU,gBAAgB,EAAEV,KAAK,CAACD,MAAN,CAAaW,gBAFL;MAG1BC,aAAa,EAAEX,KAAK,CAACD,MAAN,CAAaY,aAHF;MAI1BC,YAAY,EAAEZ,KAAK,CAACD,MAAN,CAAaa;IAJD,CAAb,CAAjB;;IAMAZ,KAAK,CAACa,IAAN;;IACA,OAAOb,KAAP;EACH;;EACDH,aAAa,CAACiB,SAAd,CAAwBD,IAAxB,GAA+B,YAAY;IACvC,IAAIE,SAAS,GAAG,KAAKC,IAAL,GAAY,IAAI7B,WAAW,CAAC8B,IAAhB,CAAqB;MAC7CT,QAAQ,EAAE,KAAKA,QAD8B;MAE7CU,aAAa,EAAE,KAAKnB,MAAL,CAAYmB;IAFkB,CAArB,CAA5B;IAIA,KAAKC,cAAL,GAAsBJ,SAAS,CAACK,KAAhC;IACA,KAAKC,gBAAL;EACH,CAPD;;EAQAxB,aAAa,CAACiB,SAAd,CAAwBO,gBAAxB,GAA2C,UAAUC,qBAAV,EAAiC;IACxE,IAAItB,KAAK,GAAG,IAAZ;;IACA,IAAIuB,cAAc,GAAG,KAAKC,WAA1B;IACA,IAAIC,SAAS,GAAG,KAAK1B,MAAL,CAAY0B,SAA5B;IACA,KAAKC,WAAL,GAAmB,IAAIxC,WAAJ,CAAgB,IAAhB,EAAsB,KAAKsC,WAAL,GAAmB,IAAIvC,WAAJ,CAAgB;MACxEwB,KAAK,EAAE,IADiE;MAExEF,WAAW,EAAE,KAAKA,WAFsD;MAGxEoB,kBAAkB,EAAE,KAAK5B,MAAL,CAAY4B,kBAHwC;MAIxEC,eAAe,EAAEjC,qBAAqB,CAAC,KAAKI,MAAN,CAJkC;MAKxE8B,KAAK,EAAEP,qBAAqB,GACtB,KAAK,CADiB,GAEtBC,cAAc,IAAIA,cAAc,CAACM,KAPiC;MAQxEJ,SAAS,EAAEA;IAR6D,CAAhB,CAAzC,EASfA,SATe,CAAnB;IAUA,KAAKK,mBAAL,GAA2BnD,IAAI,CAAC,UAAUoD,CAAV,EAAaC,OAAb,EAAsB;MAClD,OAAOhC,KAAK,CAACiC,cAAN,CAAqBF,CAArB,EAAwBC,OAAxB,CAAP;IACH,CAF8B,EAE5B;MACCE,GAAG,EAAE,KAAKnC,MAAL,CAAY4B,kBADlB;MAECQ,YAAY,EAAE,UAAUJ,CAAV,EAAa;QACvB,IAAIK,KAAK,GAAGL,CAAC,CAACM,UAAF,GAAerC,KAAK,CAACmB,cAArB,GAAsCnB,KAAK,CAACgB,IAAxD;;QACA,IAAI5B,qBAAqB,CAACgD,KAAD,CAAzB,EAAkC;UAC9B,IAAIC,UAAU,GAAGN,CAAC,CAACM,UAAnB;UAAA,IAA+BC,EAAE,GAAGP,CAAC,CAACO,EAAtC;UAAA,IAA0CC,SAAS,GAAGR,CAAC,CAACQ,SAAxD;UACA,OAAOH,KAAK,CAACD,YAAN,CAAmBJ,CAAC,CAACS,KAArB,EAA4BT,CAAC,CAACU,QAA9B,EAAwC7C,kBAAkB,CAAC;YAAEyC,UAAU,EAAEA,UAAd;YAA0BC,EAAE,EAAEA,EAA9B;YAAkCC,SAAS,EAAEA;UAA7C,CAAD,CAA1D,CAAP;QACH;MACJ;IARF,CAF4B,CAA/B;IAYA,IAAIpC,GAAJ,CAAQ,CACJ,KAAKa,IAAL,CAAU0B,KADN,EAEJ,KAAKvB,cAAL,CAAoBuB,KAFhB,CAAR,EAGGC,OAHH,CAGW,UAAUD,KAAV,EAAiB;MAAE,OAAOA,KAAK,CAACE,YAAN,EAAP;IAA8B,CAH5D;EAIH,CA9BD;;EA+BA/C,aAAa,CAACiB,SAAd,CAAwB+B,OAAxB,GAAkC,UAAU7B,IAAV,EAAgB;IAC9C,KAAKH,IAAL;IACA,IAAIG,IAAJ,EACI,KAAKA,IAAL,CAAU8B,OAAV,CAAkB9B,IAAlB;IACJ,OAAO,IAAP;EACH,CALD;;EAMAnB,aAAa,CAACiB,SAAd,CAAwBiC,OAAxB,GAAkC,UAAUV,UAAV,EAAsB;IACpD,IAAIA,UAAU,KAAK,KAAK,CAAxB,EAA2B;MAAEA,UAAU,GAAG,KAAb;IAAqB;;IAClD,OAAO,CAACA,UAAU,GAAG,KAAKlB,cAAR,GAAyB,KAAKH,IAAzC,EAA+C+B,OAA/C,EAAP;EACH,CAHD;;EAIAlD,aAAa,CAACiB,SAAd,CAAwBkC,IAAxB,GAA+B,UAAUhB,OAAV,EAAmB;IAC9C,IAAIiB,EAAE,GAAGjB,OAAO,CAACkB,iBAAjB;IAAA,IAAoCA,iBAAiB,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,KAAhB,GAAwBA,EAAhF;;IACA,IAAI;MACA,OAAO,KAAKzB,WAAL,CAAiB2B,qBAAjB,CAAuC3E,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKwD,OAAL,CAAT,EAAwB;QAAEI,KAAK,EAAEJ,OAAO,CAACK,UAAR,GAAqB,KAAKlB,cAA1B,GAA2C,KAAKH,IAAzD;QAA+DjB,MAAM,EAAE,KAAKA,MAA5E;QAAoFmD,iBAAiB,EAAEA;MAAvG,CAAxB,CAA/C,EAAoME,MAApM,IAA8M,IAArN;IACH,CAFD,CAGA,OAAOC,CAAP,EAAU;MACN,IAAIA,CAAC,YAAYvE,iBAAjB,EAAoC;QAChC,OAAO,IAAP;MACH;;MACD,MAAMuE,CAAN;IACH;EACJ,CAXD;;EAYAxD,aAAa,CAACiB,SAAd,CAAwBwC,KAAxB,GAAgC,UAAUtB,OAAV,EAAmB;IAC/C,IAAI;MACA,EAAE,KAAK1B,OAAP;MACA,OAAO,KAAKoB,WAAL,CAAiB6B,YAAjB,CAA8B,KAAKvC,IAAnC,EAAyCgB,OAAzC,CAAP;IACH,CAHD,SAIQ;MACJ,IAAI,CAAC,GAAE,KAAK1B,OAAR,IAAmB0B,OAAO,CAACwB,SAAR,KAAsB,KAA7C,EAAoD;QAChD,KAAKC,gBAAL;MACH;IACJ;EACJ,CAVD;;EAWA5D,aAAa,CAACiB,SAAd,CAAwB4C,MAAxB,GAAiC,UAAU1B,OAAV,EAAmB;IAChD,IAAIvC,MAAM,CAACQ,IAAP,CAAY+B,OAAZ,EAAqB,IAArB,KAA8B,CAACA,OAAO,CAACM,EAA3C,EAA+C;MAC3C,OAAO,KAAP;IACH;;IACD,IAAIF,KAAK,GAAGJ,OAAO,CAACK,UAAR,GACN,KAAKlB,cADC,GAEN,KAAKH,IAFX;;IAGA,IAAI;MACA,EAAE,KAAKV,OAAP;MACA,OAAO8B,KAAK,CAACsB,MAAN,CAAa1B,OAAO,CAACM,EAAR,IAAc,YAA3B,EAAyCN,OAAO,CAAC2B,MAAjD,CAAP;IACH,CAHD,SAIQ;MACJ,IAAI,CAAC,GAAE,KAAKrD,OAAR,IAAmB0B,OAAO,CAACwB,SAAR,KAAsB,KAA7C,EAAoD;QAChD,KAAKC,gBAAL;MACH;IACJ;EACJ,CAhBD;;EAiBA5D,aAAa,CAACiB,SAAd,CAAwB8C,IAAxB,GAA+B,UAAU5B,OAAV,EAAmB;IAC9C,OAAO,KAAKR,WAAL,CAAiB2B,qBAAjB,CAAuC3E,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKwD,OAAL,CAAT,EAAwB;MAAEI,KAAK,EAAEJ,OAAO,CAACK,UAAR,GAAqB,KAAKlB,cAA1B,GAA2C,KAAKH,IAAzD;MAA+D6C,MAAM,EAAE7B,OAAO,CAACM,EAAR,IAAc,YAArF;MAAmGvC,MAAM,EAAE,KAAKA;IAAhH,CAAxB,CAA/C,CAAP;EACH,CAFD;;EAGAF,aAAa,CAACiB,SAAd,CAAwBgD,KAAxB,GAAgC,UAAUA,KAAV,EAAiB;IAC7C,IAAI9D,KAAK,GAAG,IAAZ;;IACA,IAAI,CAAC,KAAKE,OAAL,CAAa6D,IAAlB,EAAwB;MACpBxE,WAAW,CAAC,IAAD,CAAX;IACH;;IACD,KAAKW,OAAL,CAAa8D,GAAb,CAAiBF,KAAjB;;IACA,IAAIA,KAAK,CAACG,SAAV,EAAqB;MACjB,KAAKnC,mBAAL,CAAyBgC,KAAzB;IACH;;IACD,OAAO,YAAY;MACf,IAAI9D,KAAK,CAACE,OAAN,CAAcgE,MAAd,CAAqBJ,KAArB,KAA+B,CAAC9D,KAAK,CAACE,OAAN,CAAc6D,IAAlD,EAAwD;QACpDzE,WAAW,CAACU,KAAD,CAAX;MACH;;MACDA,KAAK,CAAC8B,mBAAN,CAA0BqC,MAA1B,CAAiCL,KAAjC;IACH,CALD;EAMH,CAfD;;EAgBAjE,aAAa,CAACiB,SAAd,CAAwBsD,EAAxB,GAA6B,UAAUpC,OAAV,EAAmB;IAC5CpC,kBAAkB,CAACyE,KAAnB;IACA,IAAIC,GAAG,GAAG,KAAKnD,cAAL,CAAoBiD,EAApB,EAAV;;IACA,IAAIpC,OAAO,IAAI,CAAC,KAAK1B,OAArB,EAA8B;MAC1B,IAAI0B,OAAO,CAACX,gBAAZ,EAA8B;QAC1B,KAAKA,gBAAL,CAAsBW,OAAO,CAACV,qBAA9B;MACH,CAFD,MAGK,IAAIU,OAAO,CAACV,qBAAZ,EAAmC;QACpC,KAAKE,WAAL,CAAiB+C,UAAjB;MACH;IACJ;;IACD,OAAOD,GAAP;EACH,CAZD;;EAaAzE,aAAa,CAACiB,SAAd,CAAwB0D,MAAxB,GAAiC,UAAUX,MAAV,EAAkBxB,UAAlB,EAA8B;IAC3D,OAAO,CAACA,UAAU,GAAG,KAAKlB,cAAR,GAAyB,KAAKH,IAAzC,EAA+CwD,MAA/C,CAAsDX,MAAtD,CAAP;EACH,CAFD;;EAGAhE,aAAa,CAACiB,SAAd,CAAwB2D,OAAxB,GAAkC,UAAUZ,MAAV,EAAkBxB,UAAlB,EAA8B;IAC5D,OAAO,CAACA,UAAU,GAAG,KAAKlB,cAAR,GAAyB,KAAKH,IAAzC,EAA+CyD,OAA/C,CAAuDZ,MAAvD,CAAP;EACH,CAFD;;EAGAhE,aAAa,CAACiB,SAAd,CAAwB4D,QAAxB,GAAmC,UAAUC,MAAV,EAAkB;IACjD,IAAI3F,WAAW,CAAC2F,MAAD,CAAf,EACI,OAAOA,MAAM,CAACC,KAAd;;IACJ,IAAI;MACA,OAAO,KAAKpE,QAAL,CAAckE,QAAd,CAAuBC,MAAvB,EAA+B,CAA/B,CAAP;IACH,CAFD,CAGA,OAAOtB,CAAP,EAAU;MACNwB,OAAO,IAAInG,SAAS,CAACoG,IAAV,CAAezB,CAAf,CAAX;IACH;EACJ,CATD;;EAUAxD,aAAa,CAACiB,SAAd,CAAwBiE,KAAxB,GAAgC,UAAU/C,OAAV,EAAmB;IAC/C,IAAI,CAACA,OAAO,CAACM,EAAb,EAAiB;MACb,IAAI7C,MAAM,CAACQ,IAAP,CAAY+B,OAAZ,EAAqB,IAArB,CAAJ,EAAgC;QAC5B,OAAO,KAAP;MACH;;MACDA,OAAO,GAAGxD,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKwD,OAAL,CAAT,EAAwB;QAAEM,EAAE,EAAE;MAAN,CAAxB,CAAlB;IACH;;IACD,IAAI;MACA,EAAE,KAAKhC,OAAP;MACA,OAAO,KAAKa,cAAL,CAAoB4D,KAApB,CAA0B/C,OAA1B,EAAmC,KAAKhB,IAAxC,CAAP;IACH,CAHD,SAIQ;MACJ,IAAI,CAAC,GAAE,KAAKV,OAAR,IAAmB0B,OAAO,CAACwB,SAAR,KAAsB,KAA7C,EAAoD;QAChD,KAAKC,gBAAL;MACH;IACJ;EACJ,CAhBD;;EAiBA5D,aAAa,CAACiB,SAAd,CAAwBuD,KAAxB,GAAgC,UAAUrC,OAAV,EAAmB;IAC/C,IAAIhC,KAAK,GAAG,IAAZ;;IACA,KAAKa,IAAL;IACAjB,kBAAkB,CAACyE,KAAnB;;IACA,IAAIrC,OAAO,IAAIA,OAAO,CAACgD,cAAvB,EAAuC;MACnC,KAAK9E,OAAL,CAAayC,OAAb,CAAqB,UAAUmB,KAAV,EAAiB;QAAE,OAAO9D,KAAK,CAAC8B,mBAAN,CAA0BqC,MAA1B,CAAiCL,KAAjC,CAAP;MAAiD,CAAzF;MACA,KAAK5D,OAAL,CAAa+E,KAAb;MACA3F,WAAW,CAAC,IAAD,CAAX;IACH,CAJD,MAKK;MACD,KAAKmE,gBAAL;IACH;;IACD,OAAOyB,OAAO,CAACC,OAAR,EAAP;EACH,CAbD;;EAcAtF,aAAa,CAACiB,SAAd,CAAwBsE,gBAAxB,GAA2C,UAAUC,UAAV,EAAsB;IAC7D,IAAIC,iBAAiB,GAAG,KAAKnE,cAAL,CAAoBoE,WAApB,CAAgCF,UAAhC,CAAxB;;IACA,IAAIC,iBAAiB,KAAK,KAAKnE,cAA/B,EAA+C;MAC3C,KAAKA,cAAL,GAAsBmE,iBAAtB;MACA,KAAK7B,gBAAL;IACH;EACJ,CAND;;EAOA5D,aAAa,CAACiB,SAAd,CAAwB0E,KAAxB,GAAgC,UAAUxD,OAAV,EAAmB;IAC/C,IAAIhC,KAAK,GAAG,IAAZ;;IACA,IAAIyF,MAAM,GAAGzD,OAAO,CAACyD,MAArB;IAAA,IAA6BxC,EAAE,GAAGjB,OAAO,CAACK,UAA1C;IAAA,IAAsDA,UAAU,GAAGY,EAAE,KAAK,KAAK,CAAZ,GAAgB,IAAhB,GAAuBA,EAA1F;IAAA,IAA8FmC,gBAAgB,GAAGpD,OAAO,CAACoD,gBAAzH;IAAA,IAA2IM,cAAc,GAAG1D,OAAO,CAAC0D,cAApK;IACA,IAAIC,YAAJ;;IACA,IAAIC,OAAO,GAAG,UAAUC,KAAV,EAAiB;MAC3B,IAAI5C,EAAE,GAAGjD,KAAT;MAAA,IAAgBgB,IAAI,GAAGiC,EAAE,CAACjC,IAA1B;MAAA,IAAgCG,cAAc,GAAG8B,EAAE,CAAC9B,cAApD;MACA,EAAEnB,KAAK,CAACM,OAAR;;MACA,IAAIuF,KAAJ,EAAW;QACP7F,KAAK,CAACgB,IAAN,GAAahB,KAAK,CAACmB,cAAN,GAAuB0E,KAApC;MACH;;MACD,IAAI;QACA,OAAOF,YAAY,GAAGF,MAAM,CAACzF,KAAD,CAA5B;MACH,CAFD,SAGQ;QACJ,EAAEA,KAAK,CAACM,OAAR;QACAN,KAAK,CAACgB,IAAN,GAAaA,IAAb;QACAhB,KAAK,CAACmB,cAAN,GAAuBA,cAAvB;MACH;IACJ,CAdD;;IAeA,IAAI2E,YAAY,GAAG,IAAI3F,GAAJ,EAAnB;;IACA,IAAIuF,cAAc,IAAI,CAAC,KAAKpF,OAA5B,EAAqC;MACjC,KAAKmD,gBAAL,CAAsBjF,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKwD,OAAL,CAAT,EAAwB;QAAE0D,cAAc,EAAE,UAAU5B,KAAV,EAAiB;UACjFgC,YAAY,CAAC9B,GAAb,CAAiBF,KAAjB;UACA,OAAO,KAAP;QACH;MAHiD,CAAxB,CAA9B;IAIH;;IACD,IAAI,OAAOzB,UAAP,KAAsB,QAA1B,EAAoC;MAChC,KAAKlB,cAAL,GAAsB,KAAKA,cAAL,CAAoB4E,QAApB,CAA6B1D,UAA7B,EAAyCuD,OAAzC,CAAtB;IACH,CAFD,MAGK,IAAIvD,UAAU,KAAK,KAAnB,EAA0B;MAC3BuD,OAAO,CAAC,KAAK5E,IAAN,CAAP;IACH,CAFI,MAGA;MACD4E,OAAO;IACV;;IACD,IAAI,OAAOR,gBAAP,KAA4B,QAAhC,EAA0C;MACtC,KAAKjE,cAAL,GAAsB,KAAKA,cAAL,CAAoBoE,WAApB,CAAgCH,gBAAhC,CAAtB;IACH;;IACD,IAAIM,cAAc,IAAII,YAAY,CAAC/B,IAAnC,EAAyC;MACrC,KAAKN,gBAAL,CAAsBjF,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKwD,OAAL,CAAT,EAAwB;QAAE0D,cAAc,EAAE,UAAU5B,KAAV,EAAiBF,IAAjB,EAAuB;UACvF,IAAIR,MAAM,GAAGsC,cAAc,CAACzF,IAAf,CAAoB,IAApB,EAA0B6D,KAA1B,EAAiCF,IAAjC,CAAb;;UACA,IAAIR,MAAM,KAAK,KAAf,EAAsB;YAClB0C,YAAY,CAAC5B,MAAb,CAAoBJ,KAApB;UACH;;UACD,OAAOV,MAAP;QACH;MANiD,CAAxB,CAA9B;;MAOA,IAAI0C,YAAY,CAAC/B,IAAjB,EAAuB;QACnB+B,YAAY,CAACnD,OAAb,CAAqB,UAAUmB,KAAV,EAAiB;UAAE,OAAO9D,KAAK,CAAC8B,mBAAN,CAA0BkE,KAA1B,CAAgClC,KAAhC,CAAP;QAAgD,CAAxF;MACH;IACJ,CAXD,MAYK;MACD,KAAKL,gBAAL,CAAsBzB,OAAtB;IACH;;IACD,OAAO2D,YAAP;EACH,CAtDD;;EAuDA9F,aAAa,CAACiB,SAAd,CAAwBmF,kBAAxB,GAA6C,UAAUR,MAAV,EAAkBS,YAAlB,EAAgC;IACzE,OAAO,KAAKV,KAAL,CAAW;MACdC,MAAM,EAAEA,MADM;MAEdpD,UAAU,EAAE6D,YAAY,IAAKA,YAAY,KAAK;IAFhC,CAAX,CAAP;EAIH,CALD;;EAMArG,aAAa,CAACiB,SAAd,CAAwBqF,iBAAxB,GAA4C,UAAUC,QAAV,EAAoB;IAC5D,IAAI,KAAK7F,WAAT,EAAsB;MAClB,IAAI6C,MAAM,GAAG,KAAKhD,qBAAL,CAA2BiG,GAA3B,CAA+BD,QAA/B,CAAb;;MACA,IAAI,CAAChD,MAAL,EAAa;QACTA,MAAM,GAAGrE,qBAAqB,CAACqH,QAAD,CAA9B;QACA,KAAKhG,qBAAL,CAA2BkG,GAA3B,CAA+BF,QAA/B,EAAyChD,MAAzC;QACA,KAAKhD,qBAAL,CAA2BkG,GAA3B,CAA+BlD,MAA/B,EAAuCA,MAAvC;MACH;;MACD,OAAOA,MAAP;IACH;;IACD,OAAOgD,QAAP;EACH,CAXD;;EAYAvG,aAAa,CAACiB,SAAd,CAAwByF,gBAAxB,GAA2C,UAAUH,QAAV,EAAoB;IAC3D,IAAI3E,SAAS,GAAG,KAAK1B,MAAL,CAAY0B,SAA5B;IACA,OAAOA,SAAS,GACVA,SAAS,CAAC+E,SAAV,CAAoBJ,QAApB,CADU,GAEVA,QAFN;EAGH,CALD;;EAMAvG,aAAa,CAACiB,SAAd,CAAwB2C,gBAAxB,GAA2C,UAAUzB,OAAV,EAAmB;IAC1D,IAAIhC,KAAK,GAAG,IAAZ;;IACA,IAAI,CAAC,KAAKM,OAAV,EAAmB;MACf,KAAKJ,OAAL,CAAayC,OAAb,CAAqB,UAAUZ,CAAV,EAAa;QAAE,OAAO/B,KAAK,CAAC8B,mBAAN,CAA0BC,CAA1B,EAA6BC,OAA7B,CAAP;MAA+C,CAAnF;IACH;EACJ,CALD;;EAMAnC,aAAa,CAACiB,SAAd,CAAwBmB,cAAxB,GAAyC,UAAUF,CAAV,EAAaC,OAAb,EAAsB;IAC3D,IAAIyE,QAAQ,GAAG1E,CAAC,CAAC0E,QAAjB;IACA,IAAI7C,IAAI,GAAG,KAAKA,IAAL,CAAU7B,CAAV,CAAX;;IACA,IAAIC,OAAJ,EAAa;MACT,IAAID,CAAC,CAACM,UAAF,IACA,OAAOL,OAAO,CAACK,UAAf,KAA8B,QADlC,EAC4C;QACxCuB,IAAI,CAAC8C,yBAAL,GAAiC,IAAjC;MACH;;MACD,IAAI1E,OAAO,CAAC0D,cAAR,IACA1D,OAAO,CAAC0D,cAAR,CAAuBzF,IAAvB,CAA4B,IAA5B,EAAkC8B,CAAlC,EAAqC6B,IAArC,EAA2C6C,QAA3C,MAAyD,KAD7D,EACoE;QAChE;MACH;IACJ;;IACD,IAAI,CAACA,QAAD,IAAa,CAAC7H,KAAK,CAAC6H,QAAQ,CAACrD,MAAV,EAAkBQ,IAAI,CAACR,MAAvB,CAAvB,EAAuD;MACnDrB,CAAC,CAACU,QAAF,CAAWV,CAAC,CAAC0E,QAAF,GAAa7C,IAAxB,EAA8B6C,QAA9B;IACH;EACJ,CAhBD;;EAiBA,OAAO5G,aAAP;AACH,CA1SoB,CA0SnBhB,WA1SmB,CAArB;;AA2SA,SAASgB,aAAT"},"metadata":{},"sourceType":"module"}