{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { equal } from \"@wry/equality\";\nimport { DeepMerger } from \"../utilities/index.js\";\nimport { mergeIncrementalData } from \"../utilities/common/incrementalResult.js\";\nimport { reobserveCacheFirst } from \"./ObservableQuery.js\";\nimport { isNonEmptyArray, graphQLResultHasError, canUseWeakMap } from \"../utilities/index.js\";\nimport { NetworkStatus, isNetworkRequestInFlight } from \"./networkStatus.js\";\n;\nvar destructiveMethodCounts = new (canUseWeakMap ? WeakMap : Map)();\n\nfunction wrapDestructiveCacheMethod(cache, methodName) {\n  var original = cache[methodName];\n\n  if (typeof original === \"function\") {\n    cache[methodName] = function () {\n      destructiveMethodCounts.set(cache, (destructiveMethodCounts.get(cache) + 1) % 1e15);\n      return original.apply(this, arguments);\n    };\n  }\n}\n\nfunction cancelNotifyTimeout(info) {\n  if (info[\"notifyTimeout\"]) {\n    clearTimeout(info[\"notifyTimeout\"]);\n    info[\"notifyTimeout\"] = void 0;\n  }\n}\n\nvar QueryInfo = function () {\n  function QueryInfo(queryManager, queryId) {\n    if (queryId === void 0) {\n      queryId = queryManager.generateQueryId();\n    }\n\n    this.queryId = queryId;\n    this.listeners = new Set();\n    this.document = null;\n    this.lastRequestId = 1;\n    this.subscriptions = new Set();\n    this.stopped = false;\n    this.dirty = false;\n    this.observableQuery = null;\n    var cache = this.cache = queryManager.cache;\n\n    if (!destructiveMethodCounts.has(cache)) {\n      destructiveMethodCounts.set(cache, 0);\n      wrapDestructiveCacheMethod(cache, \"evict\");\n      wrapDestructiveCacheMethod(cache, \"modify\");\n      wrapDestructiveCacheMethod(cache, \"reset\");\n    }\n  }\n\n  QueryInfo.prototype.init = function (query) {\n    var networkStatus = query.networkStatus || NetworkStatus.loading;\n\n    if (this.variables && this.networkStatus !== NetworkStatus.loading && !equal(this.variables, query.variables)) {\n      networkStatus = NetworkStatus.setVariables;\n    }\n\n    if (!equal(query.variables, this.variables)) {\n      this.lastDiff = void 0;\n    }\n\n    Object.assign(this, {\n      document: query.document,\n      variables: query.variables,\n      networkError: null,\n      graphQLErrors: this.graphQLErrors || [],\n      networkStatus: networkStatus\n    });\n\n    if (query.observableQuery) {\n      this.setObservableQuery(query.observableQuery);\n    }\n\n    if (query.lastRequestId) {\n      this.lastRequestId = query.lastRequestId;\n    }\n\n    return this;\n  };\n\n  QueryInfo.prototype.reset = function () {\n    cancelNotifyTimeout(this);\n    this.dirty = false;\n  };\n\n  QueryInfo.prototype.getDiff = function (variables) {\n    if (variables === void 0) {\n      variables = this.variables;\n    }\n\n    var options = this.getDiffOptions(variables);\n\n    if (this.lastDiff && equal(options, this.lastDiff.options)) {\n      return this.lastDiff.diff;\n    }\n\n    this.updateWatch(this.variables = variables);\n    var oq = this.observableQuery;\n\n    if (oq && oq.options.fetchPolicy === \"no-cache\") {\n      return {\n        complete: false\n      };\n    }\n\n    var diff = this.cache.diff(options);\n    this.updateLastDiff(diff, options);\n    return diff;\n  };\n\n  QueryInfo.prototype.updateLastDiff = function (diff, options) {\n    this.lastDiff = diff ? {\n      diff: diff,\n      options: options || this.getDiffOptions()\n    } : void 0;\n  };\n\n  QueryInfo.prototype.getDiffOptions = function (variables) {\n    var _a;\n\n    if (variables === void 0) {\n      variables = this.variables;\n    }\n\n    return {\n      query: this.document,\n      variables: variables,\n      returnPartialData: true,\n      optimistic: true,\n      canonizeResults: (_a = this.observableQuery) === null || _a === void 0 ? void 0 : _a.options.canonizeResults\n    };\n  };\n\n  QueryInfo.prototype.setDiff = function (diff) {\n    var _this = this;\n\n    var oldDiff = this.lastDiff && this.lastDiff.diff;\n    this.updateLastDiff(diff);\n\n    if (!this.dirty && !equal(oldDiff && oldDiff.result, diff && diff.result)) {\n      this.dirty = true;\n\n      if (!this.notifyTimeout) {\n        this.notifyTimeout = setTimeout(function () {\n          return _this.notify();\n        }, 0);\n      }\n    }\n  };\n\n  QueryInfo.prototype.setObservableQuery = function (oq) {\n    var _this = this;\n\n    if (oq === this.observableQuery) return;\n\n    if (this.oqListener) {\n      this.listeners.delete(this.oqListener);\n    }\n\n    this.observableQuery = oq;\n\n    if (oq) {\n      oq[\"queryInfo\"] = this;\n      this.listeners.add(this.oqListener = function () {\n        var diff = _this.getDiff();\n\n        if (diff.fromOptimisticTransaction) {\n          oq[\"observe\"]();\n        } else {\n          reobserveCacheFirst(oq);\n        }\n      });\n    } else {\n      delete this.oqListener;\n    }\n  };\n\n  QueryInfo.prototype.notify = function () {\n    var _this = this;\n\n    cancelNotifyTimeout(this);\n\n    if (this.shouldNotify()) {\n      this.listeners.forEach(function (listener) {\n        return listener(_this);\n      });\n    }\n\n    this.dirty = false;\n  };\n\n  QueryInfo.prototype.shouldNotify = function () {\n    if (!this.dirty || !this.listeners.size) {\n      return false;\n    }\n\n    if (isNetworkRequestInFlight(this.networkStatus) && this.observableQuery) {\n      var fetchPolicy = this.observableQuery.options.fetchPolicy;\n\n      if (fetchPolicy !== \"cache-only\" && fetchPolicy !== \"cache-and-network\") {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  QueryInfo.prototype.stop = function () {\n    if (!this.stopped) {\n      this.stopped = true;\n      this.reset();\n      this.cancel();\n      this.cancel = QueryInfo.prototype.cancel;\n      this.subscriptions.forEach(function (sub) {\n        return sub.unsubscribe();\n      });\n      var oq = this.observableQuery;\n      if (oq) oq.stopPolling();\n    }\n  };\n\n  QueryInfo.prototype.cancel = function () {};\n\n  QueryInfo.prototype.updateWatch = function (variables) {\n    var _this = this;\n\n    if (variables === void 0) {\n      variables = this.variables;\n    }\n\n    var oq = this.observableQuery;\n\n    if (oq && oq.options.fetchPolicy === \"no-cache\") {\n      return;\n    }\n\n    var watchOptions = __assign(__assign({}, this.getDiffOptions(variables)), {\n      watcher: this,\n      callback: function (diff) {\n        return _this.setDiff(diff);\n      }\n    });\n\n    if (!this.lastWatch || !equal(watchOptions, this.lastWatch)) {\n      this.cancel();\n      this.cancel = this.cache.watch(this.lastWatch = watchOptions);\n    }\n  };\n\n  QueryInfo.prototype.resetLastWrite = function () {\n    this.lastWrite = void 0;\n  };\n\n  QueryInfo.prototype.shouldWrite = function (result, variables) {\n    var lastWrite = this.lastWrite;\n    return !(lastWrite && lastWrite.dmCount === destructiveMethodCounts.get(this.cache) && equal(variables, lastWrite.variables) && equal(result.data, lastWrite.result.data));\n  };\n\n  QueryInfo.prototype.markResult = function (result, document, options, cacheWriteBehavior) {\n    var _this = this;\n\n    var merger = new DeepMerger();\n    var graphQLErrors = isNonEmptyArray(result.errors) ? result.errors.slice(0) : [];\n    this.reset();\n\n    if ('incremental' in result && isNonEmptyArray(result.incremental)) {\n      var mergedData = mergeIncrementalData(this.getDiff().result, result);\n      result.data = mergedData;\n    } else if ('hasNext' in result && result.hasNext) {\n      var diff = this.getDiff();\n      result.data = merger.merge(diff.result, result.data);\n    }\n\n    this.graphQLErrors = graphQLErrors;\n\n    if (options.fetchPolicy === 'no-cache') {\n      this.updateLastDiff({\n        result: result.data,\n        complete: true\n      }, this.getDiffOptions(options.variables));\n    } else if (cacheWriteBehavior !== 0) {\n      if (shouldWriteResult(result, options.errorPolicy)) {\n        this.cache.performTransaction(function (cache) {\n          if (_this.shouldWrite(result, options.variables)) {\n            cache.writeQuery({\n              query: document,\n              data: result.data,\n              variables: options.variables,\n              overwrite: cacheWriteBehavior === 1\n            });\n            _this.lastWrite = {\n              result: result,\n              variables: options.variables,\n              dmCount: destructiveMethodCounts.get(_this.cache)\n            };\n          } else {\n            if (_this.lastDiff && _this.lastDiff.diff.complete) {\n              result.data = _this.lastDiff.diff.result;\n              return;\n            }\n          }\n\n          var diffOptions = _this.getDiffOptions(options.variables);\n\n          var diff = cache.diff(diffOptions);\n\n          if (!_this.stopped) {\n            _this.updateWatch(options.variables);\n          }\n\n          _this.updateLastDiff(diff, diffOptions);\n\n          if (diff.complete) {\n            result.data = diff.result;\n          }\n        });\n      } else {\n        this.lastWrite = void 0;\n      }\n    }\n  };\n\n  QueryInfo.prototype.markReady = function () {\n    this.networkError = null;\n    return this.networkStatus = NetworkStatus.ready;\n  };\n\n  QueryInfo.prototype.markError = function (error) {\n    this.networkStatus = NetworkStatus.error;\n    this.lastWrite = void 0;\n    this.reset();\n\n    if (error.graphQLErrors) {\n      this.graphQLErrors = error.graphQLErrors;\n    }\n\n    if (error.networkError) {\n      this.networkError = error.networkError;\n    }\n\n    return error;\n  };\n\n  return QueryInfo;\n}();\n\nexport { QueryInfo };\nexport function shouldWriteResult(result, errorPolicy) {\n  if (errorPolicy === void 0) {\n    errorPolicy = \"none\";\n  }\n\n  var ignoreErrors = errorPolicy === \"ignore\" || errorPolicy === \"all\";\n  var writeWithErrors = !graphQLResultHasError(result);\n\n  if (!writeWithErrors && ignoreErrors && result.data) {\n    writeWithErrors = true;\n  }\n\n  return writeWithErrors;\n}","map":{"version":3,"names":["__assign","equal","DeepMerger","mergeIncrementalData","reobserveCacheFirst","isNonEmptyArray","graphQLResultHasError","canUseWeakMap","NetworkStatus","isNetworkRequestInFlight","destructiveMethodCounts","WeakMap","Map","wrapDestructiveCacheMethod","cache","methodName","original","set","get","apply","arguments","cancelNotifyTimeout","info","clearTimeout","QueryInfo","queryManager","queryId","generateQueryId","listeners","Set","document","lastRequestId","subscriptions","stopped","dirty","observableQuery","has","prototype","init","query","networkStatus","loading","variables","setVariables","lastDiff","Object","assign","networkError","graphQLErrors","setObservableQuery","reset","getDiff","options","getDiffOptions","diff","updateWatch","oq","fetchPolicy","complete","updateLastDiff","_a","returnPartialData","optimistic","canonizeResults","setDiff","_this","oldDiff","result","notifyTimeout","setTimeout","notify","oqListener","delete","add","fromOptimisticTransaction","shouldNotify","forEach","listener","size","stop","cancel","sub","unsubscribe","stopPolling","watchOptions","watcher","callback","lastWatch","watch","resetLastWrite","lastWrite","shouldWrite","dmCount","data","markResult","cacheWriteBehavior","merger","errors","slice","incremental","mergedData","hasNext","merge","shouldWriteResult","errorPolicy","performTransaction","writeQuery","overwrite","diffOptions","markReady","ready","markError","error","ignoreErrors","writeWithErrors"],"sources":["F:/Bureau/Test_MachinesTalk/MachinesTalk/node_modules/@apollo/client/core/QueryInfo.js"],"sourcesContent":["import { __assign } from \"tslib\";\nimport { equal } from \"@wry/equality\";\nimport { DeepMerger } from \"../utilities/index.js\";\nimport { mergeIncrementalData } from \"../utilities/common/incrementalResult.js\";\nimport { reobserveCacheFirst } from \"./ObservableQuery.js\";\nimport { isNonEmptyArray, graphQLResultHasError, canUseWeakMap, } from \"../utilities/index.js\";\nimport { NetworkStatus, isNetworkRequestInFlight, } from \"./networkStatus.js\";\n;\nvar destructiveMethodCounts = new (canUseWeakMap ? WeakMap : Map)();\nfunction wrapDestructiveCacheMethod(cache, methodName) {\n    var original = cache[methodName];\n    if (typeof original === \"function\") {\n        cache[methodName] = function () {\n            destructiveMethodCounts.set(cache, (destructiveMethodCounts.get(cache) + 1) % 1e15);\n            return original.apply(this, arguments);\n        };\n    }\n}\nfunction cancelNotifyTimeout(info) {\n    if (info[\"notifyTimeout\"]) {\n        clearTimeout(info[\"notifyTimeout\"]);\n        info[\"notifyTimeout\"] = void 0;\n    }\n}\nvar QueryInfo = (function () {\n    function QueryInfo(queryManager, queryId) {\n        if (queryId === void 0) { queryId = queryManager.generateQueryId(); }\n        this.queryId = queryId;\n        this.listeners = new Set();\n        this.document = null;\n        this.lastRequestId = 1;\n        this.subscriptions = new Set();\n        this.stopped = false;\n        this.dirty = false;\n        this.observableQuery = null;\n        var cache = this.cache = queryManager.cache;\n        if (!destructiveMethodCounts.has(cache)) {\n            destructiveMethodCounts.set(cache, 0);\n            wrapDestructiveCacheMethod(cache, \"evict\");\n            wrapDestructiveCacheMethod(cache, \"modify\");\n            wrapDestructiveCacheMethod(cache, \"reset\");\n        }\n    }\n    QueryInfo.prototype.init = function (query) {\n        var networkStatus = query.networkStatus || NetworkStatus.loading;\n        if (this.variables &&\n            this.networkStatus !== NetworkStatus.loading &&\n            !equal(this.variables, query.variables)) {\n            networkStatus = NetworkStatus.setVariables;\n        }\n        if (!equal(query.variables, this.variables)) {\n            this.lastDiff = void 0;\n        }\n        Object.assign(this, {\n            document: query.document,\n            variables: query.variables,\n            networkError: null,\n            graphQLErrors: this.graphQLErrors || [],\n            networkStatus: networkStatus,\n        });\n        if (query.observableQuery) {\n            this.setObservableQuery(query.observableQuery);\n        }\n        if (query.lastRequestId) {\n            this.lastRequestId = query.lastRequestId;\n        }\n        return this;\n    };\n    QueryInfo.prototype.reset = function () {\n        cancelNotifyTimeout(this);\n        this.dirty = false;\n    };\n    QueryInfo.prototype.getDiff = function (variables) {\n        if (variables === void 0) { variables = this.variables; }\n        var options = this.getDiffOptions(variables);\n        if (this.lastDiff && equal(options, this.lastDiff.options)) {\n            return this.lastDiff.diff;\n        }\n        this.updateWatch(this.variables = variables);\n        var oq = this.observableQuery;\n        if (oq && oq.options.fetchPolicy === \"no-cache\") {\n            return { complete: false };\n        }\n        var diff = this.cache.diff(options);\n        this.updateLastDiff(diff, options);\n        return diff;\n    };\n    QueryInfo.prototype.updateLastDiff = function (diff, options) {\n        this.lastDiff = diff ? {\n            diff: diff,\n            options: options || this.getDiffOptions(),\n        } : void 0;\n    };\n    QueryInfo.prototype.getDiffOptions = function (variables) {\n        var _a;\n        if (variables === void 0) { variables = this.variables; }\n        return {\n            query: this.document,\n            variables: variables,\n            returnPartialData: true,\n            optimistic: true,\n            canonizeResults: (_a = this.observableQuery) === null || _a === void 0 ? void 0 : _a.options.canonizeResults,\n        };\n    };\n    QueryInfo.prototype.setDiff = function (diff) {\n        var _this = this;\n        var oldDiff = this.lastDiff && this.lastDiff.diff;\n        this.updateLastDiff(diff);\n        if (!this.dirty &&\n            !equal(oldDiff && oldDiff.result, diff && diff.result)) {\n            this.dirty = true;\n            if (!this.notifyTimeout) {\n                this.notifyTimeout = setTimeout(function () { return _this.notify(); }, 0);\n            }\n        }\n    };\n    QueryInfo.prototype.setObservableQuery = function (oq) {\n        var _this = this;\n        if (oq === this.observableQuery)\n            return;\n        if (this.oqListener) {\n            this.listeners.delete(this.oqListener);\n        }\n        this.observableQuery = oq;\n        if (oq) {\n            oq[\"queryInfo\"] = this;\n            this.listeners.add(this.oqListener = function () {\n                var diff = _this.getDiff();\n                if (diff.fromOptimisticTransaction) {\n                    oq[\"observe\"]();\n                }\n                else {\n                    reobserveCacheFirst(oq);\n                }\n            });\n        }\n        else {\n            delete this.oqListener;\n        }\n    };\n    QueryInfo.prototype.notify = function () {\n        var _this = this;\n        cancelNotifyTimeout(this);\n        if (this.shouldNotify()) {\n            this.listeners.forEach(function (listener) { return listener(_this); });\n        }\n        this.dirty = false;\n    };\n    QueryInfo.prototype.shouldNotify = function () {\n        if (!this.dirty || !this.listeners.size) {\n            return false;\n        }\n        if (isNetworkRequestInFlight(this.networkStatus) &&\n            this.observableQuery) {\n            var fetchPolicy = this.observableQuery.options.fetchPolicy;\n            if (fetchPolicy !== \"cache-only\" &&\n                fetchPolicy !== \"cache-and-network\") {\n                return false;\n            }\n        }\n        return true;\n    };\n    QueryInfo.prototype.stop = function () {\n        if (!this.stopped) {\n            this.stopped = true;\n            this.reset();\n            this.cancel();\n            this.cancel = QueryInfo.prototype.cancel;\n            this.subscriptions.forEach(function (sub) { return sub.unsubscribe(); });\n            var oq = this.observableQuery;\n            if (oq)\n                oq.stopPolling();\n        }\n    };\n    QueryInfo.prototype.cancel = function () { };\n    QueryInfo.prototype.updateWatch = function (variables) {\n        var _this = this;\n        if (variables === void 0) { variables = this.variables; }\n        var oq = this.observableQuery;\n        if (oq && oq.options.fetchPolicy === \"no-cache\") {\n            return;\n        }\n        var watchOptions = __assign(__assign({}, this.getDiffOptions(variables)), { watcher: this, callback: function (diff) { return _this.setDiff(diff); } });\n        if (!this.lastWatch ||\n            !equal(watchOptions, this.lastWatch)) {\n            this.cancel();\n            this.cancel = this.cache.watch(this.lastWatch = watchOptions);\n        }\n    };\n    QueryInfo.prototype.resetLastWrite = function () {\n        this.lastWrite = void 0;\n    };\n    QueryInfo.prototype.shouldWrite = function (result, variables) {\n        var lastWrite = this.lastWrite;\n        return !(lastWrite &&\n            lastWrite.dmCount === destructiveMethodCounts.get(this.cache) &&\n            equal(variables, lastWrite.variables) &&\n            equal(result.data, lastWrite.result.data));\n    };\n    QueryInfo.prototype.markResult = function (result, document, options, cacheWriteBehavior) {\n        var _this = this;\n        var merger = new DeepMerger();\n        var graphQLErrors = isNonEmptyArray(result.errors)\n            ? result.errors.slice(0)\n            : [];\n        this.reset();\n        if ('incremental' in result && isNonEmptyArray(result.incremental)) {\n            var mergedData = mergeIncrementalData(this.getDiff().result, result);\n            result.data = mergedData;\n        }\n        else if ('hasNext' in result && result.hasNext) {\n            var diff = this.getDiff();\n            result.data = merger.merge(diff.result, result.data);\n        }\n        this.graphQLErrors = graphQLErrors;\n        if (options.fetchPolicy === 'no-cache') {\n            this.updateLastDiff({ result: result.data, complete: true }, this.getDiffOptions(options.variables));\n        }\n        else if (cacheWriteBehavior !== 0) {\n            if (shouldWriteResult(result, options.errorPolicy)) {\n                this.cache.performTransaction(function (cache) {\n                    if (_this.shouldWrite(result, options.variables)) {\n                        cache.writeQuery({\n                            query: document,\n                            data: result.data,\n                            variables: options.variables,\n                            overwrite: cacheWriteBehavior === 1,\n                        });\n                        _this.lastWrite = {\n                            result: result,\n                            variables: options.variables,\n                            dmCount: destructiveMethodCounts.get(_this.cache),\n                        };\n                    }\n                    else {\n                        if (_this.lastDiff &&\n                            _this.lastDiff.diff.complete) {\n                            result.data = _this.lastDiff.diff.result;\n                            return;\n                        }\n                    }\n                    var diffOptions = _this.getDiffOptions(options.variables);\n                    var diff = cache.diff(diffOptions);\n                    if (!_this.stopped) {\n                        _this.updateWatch(options.variables);\n                    }\n                    _this.updateLastDiff(diff, diffOptions);\n                    if (diff.complete) {\n                        result.data = diff.result;\n                    }\n                });\n            }\n            else {\n                this.lastWrite = void 0;\n            }\n        }\n    };\n    QueryInfo.prototype.markReady = function () {\n        this.networkError = null;\n        return this.networkStatus = NetworkStatus.ready;\n    };\n    QueryInfo.prototype.markError = function (error) {\n        this.networkStatus = NetworkStatus.error;\n        this.lastWrite = void 0;\n        this.reset();\n        if (error.graphQLErrors) {\n            this.graphQLErrors = error.graphQLErrors;\n        }\n        if (error.networkError) {\n            this.networkError = error.networkError;\n        }\n        return error;\n    };\n    return QueryInfo;\n}());\nexport { QueryInfo };\nexport function shouldWriteResult(result, errorPolicy) {\n    if (errorPolicy === void 0) { errorPolicy = \"none\"; }\n    var ignoreErrors = errorPolicy === \"ignore\" ||\n        errorPolicy === \"all\";\n    var writeWithErrors = !graphQLResultHasError(result);\n    if (!writeWithErrors && ignoreErrors && result.data) {\n        writeWithErrors = true;\n    }\n    return writeWithErrors;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}