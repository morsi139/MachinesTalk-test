{"ast":null,"code":"//import { PastLaunchesListGQL } from 'src/app/services/spacexGraphql.service';\nimport { launches } from 'src/app/graphql/graphql.queries';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"apollo-angular\";\nimport * as i2 from \"@angular/common\";\n\nfunction LaunchListComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Loading .... \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LaunchListComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Error \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LaunchListComponent_div_4_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"b\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const launch_r5 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", launch_r5.id, \" \");\n  }\n}\n\nfunction LaunchListComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 6);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, LaunchListComponent_div_4_div_3_Template, 3, 1, \"div\", 5);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.launches[0].id, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.launches);\n  }\n}\n\nfunction LaunchListComponent_tr_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 7);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const food_r6 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(food_r6.name);\n  }\n}\n\nexport class LaunchListComponent {\n  constructor(apollo) {\n    this.apollo = apollo;\n    this.launches = [];\n    this.loading = true;\n    this.test = [];\n  }\n\n  ngOnInit() {\n    this.apollo.watchQuery({\n      query: launches\n    }).valueChanges.subscribe(result => {\n      this.test.push(\"hello\", \"hey\", \"heeey again\");\n      this.launches = result?.data?.launches;\n      this.loading = result.loading;\n      this.error = result.error;\n    });\n  }\n\n}\n\nLaunchListComponent.ɵfac = function LaunchListComponent_Factory(t) {\n  return new (t || LaunchListComponent)(i0.ɵɵdirectiveInject(i1.Apollo));\n};\n\nLaunchListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LaunchListComponent,\n  selectors: [[\"app-launch-list\"]],\n  decls: 13,\n  vars: 7,\n  consts: [[1, \"container\"], [4, \"ngIf\"], [3, \"formGroup\"], [\"type\", \"text\", \"name\", \"searchString\", \"placeholder\", \"Type to search...\", \"formControlName\", \"filter\", 1, \"form-control\"], [1, \"table\"], [4, \"ngFor\", \"ngForOf\"], [\"hidden\", \"\"], [1, \"text-left\"]],\n  template: function LaunchListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"main\")(1, \"section\", 0);\n      i0.ɵɵtemplate(2, LaunchListComponent_div_2_Template, 2, 0, \"div\", 1);\n      i0.ɵɵtemplate(3, LaunchListComponent_div_3_Template, 2, 0, \"div\", 1);\n      i0.ɵɵtemplate(4, LaunchListComponent_div_4_Template, 4, 2, \"div\", 1);\n      i0.ɵɵelementStart(5, \"form\", 2);\n      i0.ɵɵelement(6, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"table\", 4)(8, \"tr\")(9, \"th\");\n      i0.ɵɵtext(10, \"Name\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(11, LaunchListComponent_tr_11_Template, 3, 1, \"tr\", 5);\n      i0.ɵɵpipe(12, \"async\");\n      i0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.loading);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.error);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.launches);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.formGroup);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(12, 5, ctx.filteredFoods$));\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i2.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsYXVuY2gtbGlzdC5jb21wb25lbnQuY3NzIn0= */\"],\n  changeDetection: 0\n});","map":{"version":3,"mappings":"AAGA;AACA,SAASA,QAAT,QAAyB,iCAAzB;;;;;;;ICDQC;IACIA;IACJA;;;;;;IACAA;IACIA;IACJA;;;;;;IAKJA,4BAAqC,CAArC,EAAqC,GAArC;IAEYA;IAEJA;;;;;IAFIA;IAAAA;;;;;;IANdA,4BAAsB,CAAtB,EAAsB,KAAtB,EAAsB,CAAtB;IAEMA;IACFA;IACFA;IAOFA;;;;;IATMA;IAAAA;IAEoBA;IAAAA;;;;;;IAuBxBA,2BAAgD,CAAhD,EAAgD,IAAhD,EAAgD,CAAhD;IACwBA;IAAaA;;;;;IAAbA;IAAAA;;;;ADzB5B,OAAM,MAAOC,mBAAP,CAA0B;EAC9BC,YAAoBC,MAApB,EAAiC;IAAb;IACpB,gBAAe,EAAf;IACA,eAAQ,IAAR;IAEA,YAAW,EAAX;EAJqC;;EAKnCC,QAAQ;IACN,KAAKD,MAAL,CAAYE,UAAZ,CAAuB;MAACC,KAAK,EAACP;IAAP,CAAvB,EAAyCQ,YAAzC,CAAsDC,SAAtD,CAAiEC,MAAD,IAAc;MACzE,KAAKC,IAAL,CAAUC,IAAV,CAAe,OAAf,EAAuB,KAAvB,EAA6B,aAA7B;MAGH,KAAKZ,QAAL,GAAcU,MAAM,EAAEG,IAAR,EAAcb,QAA5B;MAEA,KAAKc,OAAL,GAAaJ,MAAM,CAACI,OAApB;MACA,KAAKC,KAAL,GAAWL,MAAM,CAACK,KAAlB;IACD,CARD;EASD;;AAhB2B;;;mBAAnBb,qBAAmBD;AAAA;;;QAAnBC;EAAmBc;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCZ5BnB,6BAAM,CAAN,EAAM,SAAN,EAAM,CAAN;MAGIA;MAGAA;MAGNA;MAaAA;MACEA;MAOFA;MAEAA,iCAAqB,CAArB,EAAqB,IAArB,EAAqB,CAArB,EAAqB,IAArB;MAEQA;MAAIA;MAEVA;;MAGFA;;;;MApCYA;MAAAA;MAGAA;MAAAA;MAGNA;MAAAA;MAaAA;MAAAA;MAciBA;MAAAA","names":["launches","i0","LaunchListComponent","constructor","apollo","ngOnInit","watchQuery","query","valueChanges","subscribe","result","test","push","data","loading","error","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["F:\\Bureau\\Test_MachinesTalk\\MachinesTalk\\src\\app\\components\\launch-list\\launch-list.component.ts","F:\\Bureau\\Test_MachinesTalk\\MachinesTalk\\src\\app\\components\\launch-list\\launch-list.component.html"],"sourcesContent":["import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { Apollo } from 'apollo-angular';\nimport { map } from 'rxjs/operators';\n//import { PastLaunchesListGQL } from 'src/app/services/spacexGraphql.service';\nimport { launches } from 'src/app/graphql/graphql.queries';\n\n@Component({\n  selector: 'app-launch-list',\n  templateUrl: './launch-list.component.html',\n  styleUrls: ['./launch-list.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LaunchListComponent {\n  constructor(private apollo:Apollo) {}\n  launches:any[]=[];\n  loading=true;\n  error:any;\n  test:any[]=[];\n    ngOnInit(  ) {\n      this.apollo.watchQuery({query:launches}).valueChanges.subscribe((result:any)=>\n      {    this.test.push(\"hello\",\"hey\",\"heeey again\");\n\n\n        this.launches=result?.data?.launches;\n    \n        this.loading=result.loading;\n        this.error=result.error;\n      })\n    }\n\n}\n","    <main>\n        \n      <section class=\"container\">\n        <div *ngIf=\"loading\">\n            Loading ....\n        </div>\n        <div *ngIf=\"error\">\n            Error\n        </div>\n  <div *ngIf=\"launches\">\n    <div hidden>\n        {{launches[0].id}}\n      </div>\n    <div *ngFor=\"let launch of launches\">\n            <b>\n                {{launch.id}}\n    \n            </b>       \n        \n    </div>\n  </div>\n\n  <form [formGroup]=\"formGroup\">\n    <input\n      type=\"text\"\n      class=\"form-control\"\n      name=\"searchString\"\n      placeholder=\"Type to search...\"\n      formControlName=\"filter\"\n    />\n  </form>\n  \n  <table class=\"table\">\n    <tr>\n      <th>Name</th>\n    </tr>\n    <tr *ngFor=\"let food of filteredFoods$ | async\">\n      <td class=\"text-left\">{{food.name}}</td>\n    </tr>\n  </table>\n       \n      </section>\n    </main>\n  "]},"metadata":{},"sourceType":"module"}