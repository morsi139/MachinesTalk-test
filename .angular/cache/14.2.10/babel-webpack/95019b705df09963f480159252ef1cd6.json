{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { invariant, InvariantError } from \"../../utilities/globals/index.js\";\nimport { Kind } from 'graphql';\nimport { wrap } from 'optimism';\nimport { isField, resultKeyNameFromField, isReference, makeReference, shouldInclude, addTypenameToDocument, getDefaultValues, getMainDefinition, getQueryDefinition, getFragmentFromSelection, maybeDeepFreeze, mergeDeepArray, DeepMerger, isNonNullObject, canUseWeakMap, compact } from \"../../utilities/index.js\";\nimport { maybeDependOnExistenceOfEntity, supportsResultCaching } from \"./entityStore.js\";\nimport { isArray, extractFragmentContext, getTypenameFromStoreObject, shouldCanonizeResults } from \"./helpers.js\";\nimport { MissingFieldError } from \"../core/types/common.js\";\nimport { canonicalStringify, ObjectCanon } from \"./object-canon.js\";\n;\n\nfunction execSelectionSetKeyArgs(options) {\n  return [options.selectionSet, options.objectOrReference, options.context, options.context.canonizeResults];\n}\n\nvar StoreReader = function () {\n  function StoreReader(config) {\n    var _this = this;\n\n    this.knownResults = new (canUseWeakMap ? WeakMap : Map)();\n    this.config = compact(config, {\n      addTypename: config.addTypename !== false,\n      canonizeResults: shouldCanonizeResults(config)\n    });\n    this.canon = config.canon || new ObjectCanon();\n    this.executeSelectionSet = wrap(function (options) {\n      var _a;\n\n      var canonizeResults = options.context.canonizeResults;\n      var peekArgs = execSelectionSetKeyArgs(options);\n      peekArgs[3] = !canonizeResults;\n\n      var other = (_a = _this.executeSelectionSet).peek.apply(_a, peekArgs);\n\n      if (other) {\n        if (canonizeResults) {\n          return __assign(__assign({}, other), {\n            result: _this.canon.admit(other.result)\n          });\n        }\n\n        return other;\n      }\n\n      maybeDependOnExistenceOfEntity(options.context.store, options.enclosingRef.__ref);\n      return _this.execSelectionSetImpl(options);\n    }, {\n      max: this.config.resultCacheMaxSize,\n      keyArgs: execSelectionSetKeyArgs,\n      makeCacheKey: function (selectionSet, parent, context, canonizeResults) {\n        if (supportsResultCaching(context.store)) {\n          return context.store.makeCacheKey(selectionSet, isReference(parent) ? parent.__ref : parent, context.varString, canonizeResults);\n        }\n      }\n    });\n    this.executeSubSelectedArray = wrap(function (options) {\n      maybeDependOnExistenceOfEntity(options.context.store, options.enclosingRef.__ref);\n      return _this.execSubSelectedArrayImpl(options);\n    }, {\n      max: this.config.resultCacheMaxSize,\n      makeCacheKey: function (_a) {\n        var field = _a.field,\n            array = _a.array,\n            context = _a.context;\n\n        if (supportsResultCaching(context.store)) {\n          return context.store.makeCacheKey(field, array, context.varString);\n        }\n      }\n    });\n  }\n\n  StoreReader.prototype.resetCanon = function () {\n    this.canon = new ObjectCanon();\n  };\n\n  StoreReader.prototype.diffQueryAgainstStore = function (_a) {\n    var store = _a.store,\n        query = _a.query,\n        _b = _a.rootId,\n        rootId = _b === void 0 ? 'ROOT_QUERY' : _b,\n        variables = _a.variables,\n        _c = _a.returnPartialData,\n        returnPartialData = _c === void 0 ? true : _c,\n        _d = _a.canonizeResults,\n        canonizeResults = _d === void 0 ? this.config.canonizeResults : _d;\n    var policies = this.config.cache.policies;\n    variables = __assign(__assign({}, getDefaultValues(getQueryDefinition(query))), variables);\n    var rootRef = makeReference(rootId);\n    var execResult = this.executeSelectionSet({\n      selectionSet: getMainDefinition(query).selectionSet,\n      objectOrReference: rootRef,\n      enclosingRef: rootRef,\n      context: __assign({\n        store: store,\n        query: query,\n        policies: policies,\n        variables: variables,\n        varString: canonicalStringify(variables),\n        canonizeResults: canonizeResults\n      }, extractFragmentContext(query, this.config.fragments))\n    });\n    var missing;\n\n    if (execResult.missing) {\n      missing = [new MissingFieldError(firstMissing(execResult.missing), execResult.missing, query, variables)];\n\n      if (!returnPartialData) {\n        throw missing[0];\n      }\n    }\n\n    return {\n      result: execResult.result,\n      complete: !missing,\n      missing: missing\n    };\n  };\n\n  StoreReader.prototype.isFresh = function (result, parent, selectionSet, context) {\n    if (supportsResultCaching(context.store) && this.knownResults.get(result) === selectionSet) {\n      var latest = this.executeSelectionSet.peek(selectionSet, parent, context, this.canon.isKnown(result));\n\n      if (latest && result === latest.result) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  StoreReader.prototype.execSelectionSetImpl = function (_a) {\n    var _this = this;\n\n    var selectionSet = _a.selectionSet,\n        objectOrReference = _a.objectOrReference,\n        enclosingRef = _a.enclosingRef,\n        context = _a.context;\n\n    if (isReference(objectOrReference) && !context.policies.rootTypenamesById[objectOrReference.__ref] && !context.store.has(objectOrReference.__ref)) {\n      return {\n        result: this.canon.empty,\n        missing: \"Dangling reference to missing \".concat(objectOrReference.__ref, \" object\")\n      };\n    }\n\n    var variables = context.variables,\n        policies = context.policies,\n        store = context.store;\n    var typename = store.getFieldValue(objectOrReference, \"__typename\");\n    var objectsToMerge = [];\n    var missing;\n    var missingMerger = new DeepMerger();\n\n    if (this.config.addTypename && typeof typename === \"string\" && !policies.rootIdsByTypename[typename]) {\n      objectsToMerge.push({\n        __typename: typename\n      });\n    }\n\n    function handleMissing(result, resultName) {\n      var _a;\n\n      if (result.missing) {\n        missing = missingMerger.merge(missing, (_a = {}, _a[resultName] = result.missing, _a));\n      }\n\n      return result.result;\n    }\n\n    var workSet = new Set(selectionSet.selections);\n    workSet.forEach(function (selection) {\n      var _a, _b;\n\n      if (!shouldInclude(selection, variables)) return;\n\n      if (isField(selection)) {\n        var fieldValue = policies.readField({\n          fieldName: selection.name.value,\n          field: selection,\n          variables: context.variables,\n          from: objectOrReference\n        }, context);\n        var resultName = resultKeyNameFromField(selection);\n\n        if (fieldValue === void 0) {\n          if (!addTypenameToDocument.added(selection)) {\n            missing = missingMerger.merge(missing, (_a = {}, _a[resultName] = \"Can't find field '\".concat(selection.name.value, \"' on \").concat(isReference(objectOrReference) ? objectOrReference.__ref + \" object\" : \"object \" + JSON.stringify(objectOrReference, null, 2)), _a));\n          }\n        } else if (isArray(fieldValue)) {\n          fieldValue = handleMissing(_this.executeSubSelectedArray({\n            field: selection,\n            array: fieldValue,\n            enclosingRef: enclosingRef,\n            context: context\n          }), resultName);\n        } else if (!selection.selectionSet) {\n          if (context.canonizeResults) {\n            fieldValue = _this.canon.pass(fieldValue);\n          }\n        } else if (fieldValue != null) {\n          fieldValue = handleMissing(_this.executeSelectionSet({\n            selectionSet: selection.selectionSet,\n            objectOrReference: fieldValue,\n            enclosingRef: isReference(fieldValue) ? fieldValue : enclosingRef,\n            context: context\n          }), resultName);\n        }\n\n        if (fieldValue !== void 0) {\n          objectsToMerge.push((_b = {}, _b[resultName] = fieldValue, _b));\n        }\n      } else {\n        var fragment = getFragmentFromSelection(selection, context.lookupFragment);\n\n        if (!fragment && selection.kind === Kind.FRAGMENT_SPREAD) {\n          throw __DEV__ ? new InvariantError(\"No fragment named \".concat(selection.name.value)) : new InvariantError(5);\n        }\n\n        if (fragment && policies.fragmentMatches(fragment, typename)) {\n          fragment.selectionSet.selections.forEach(workSet.add, workSet);\n        }\n      }\n    });\n    var result = mergeDeepArray(objectsToMerge);\n    var finalResult = {\n      result: result,\n      missing: missing\n    };\n    var frozen = context.canonizeResults ? this.canon.admit(finalResult) : maybeDeepFreeze(finalResult);\n\n    if (frozen.result) {\n      this.knownResults.set(frozen.result, selectionSet);\n    }\n\n    return frozen;\n  };\n\n  StoreReader.prototype.execSubSelectedArrayImpl = function (_a) {\n    var _this = this;\n\n    var field = _a.field,\n        array = _a.array,\n        enclosingRef = _a.enclosingRef,\n        context = _a.context;\n    var missing;\n    var missingMerger = new DeepMerger();\n\n    function handleMissing(childResult, i) {\n      var _a;\n\n      if (childResult.missing) {\n        missing = missingMerger.merge(missing, (_a = {}, _a[i] = childResult.missing, _a));\n      }\n\n      return childResult.result;\n    }\n\n    if (field.selectionSet) {\n      array = array.filter(context.store.canRead);\n    }\n\n    array = array.map(function (item, i) {\n      if (item === null) {\n        return null;\n      }\n\n      if (isArray(item)) {\n        return handleMissing(_this.executeSubSelectedArray({\n          field: field,\n          array: item,\n          enclosingRef: enclosingRef,\n          context: context\n        }), i);\n      }\n\n      if (field.selectionSet) {\n        return handleMissing(_this.executeSelectionSet({\n          selectionSet: field.selectionSet,\n          objectOrReference: item,\n          enclosingRef: isReference(item) ? item : enclosingRef,\n          context: context\n        }), i);\n      }\n\n      if (__DEV__) {\n        assertSelectionSetForIdValue(context.store, field, item);\n      }\n\n      return item;\n    });\n    return {\n      result: context.canonizeResults ? this.canon.admit(array) : array,\n      missing: missing\n    };\n  };\n\n  return StoreReader;\n}();\n\nexport { StoreReader };\n\nfunction firstMissing(tree) {\n  try {\n    JSON.stringify(tree, function (_, value) {\n      if (typeof value === \"string\") throw value;\n      return value;\n    });\n  } catch (result) {\n    return result;\n  }\n}\n\nfunction assertSelectionSetForIdValue(store, field, fieldValue) {\n  if (!field.selectionSet) {\n    var workSet_1 = new Set([fieldValue]);\n    workSet_1.forEach(function (value) {\n      if (isNonNullObject(value)) {\n        __DEV__ ? invariant(!isReference(value), \"Missing selection set for object of type \".concat(getTypenameFromStoreObject(store, value), \" returned for query field \").concat(field.name.value)) : invariant(!isReference(value), 6);\n        Object.values(value).forEach(workSet_1.add, workSet_1);\n      }\n    });\n  }\n}","map":{"version":3,"names":["__assign","invariant","InvariantError","Kind","wrap","isField","resultKeyNameFromField","isReference","makeReference","shouldInclude","addTypenameToDocument","getDefaultValues","getMainDefinition","getQueryDefinition","getFragmentFromSelection","maybeDeepFreeze","mergeDeepArray","DeepMerger","isNonNullObject","canUseWeakMap","compact","maybeDependOnExistenceOfEntity","supportsResultCaching","isArray","extractFragmentContext","getTypenameFromStoreObject","shouldCanonizeResults","MissingFieldError","canonicalStringify","ObjectCanon","execSelectionSetKeyArgs","options","selectionSet","objectOrReference","context","canonizeResults","StoreReader","config","_this","knownResults","WeakMap","Map","addTypename","canon","executeSelectionSet","_a","peekArgs","other","peek","apply","result","admit","store","enclosingRef","__ref","execSelectionSetImpl","max","resultCacheMaxSize","keyArgs","makeCacheKey","parent","varString","executeSubSelectedArray","execSubSelectedArrayImpl","field","array","prototype","resetCanon","diffQueryAgainstStore","query","_b","rootId","variables","_c","returnPartialData","_d","policies","cache","rootRef","execResult","fragments","missing","firstMissing","complete","isFresh","get","latest","isKnown","rootTypenamesById","has","empty","concat","typename","getFieldValue","objectsToMerge","missingMerger","rootIdsByTypename","push","__typename","handleMissing","resultName","merge","workSet","Set","selections","forEach","selection","fieldValue","readField","fieldName","name","value","from","added","JSON","stringify","pass","fragment","lookupFragment","kind","FRAGMENT_SPREAD","__DEV__","fragmentMatches","add","finalResult","frozen","set","childResult","i","filter","canRead","map","item","assertSelectionSetForIdValue","tree","_","workSet_1","Object","values"],"sources":["F:/Bureau/Test_MachinesTalk/MachinesTalk/node_modules/@apollo/client/cache/inmemory/readFromStore.js"],"sourcesContent":["import { __assign } from \"tslib\";\nimport { invariant, InvariantError } from \"../../utilities/globals/index.js\";\nimport { Kind, } from 'graphql';\nimport { wrap } from 'optimism';\nimport { isField, resultKeyNameFromField, isReference, makeReference, shouldInclude, addTypenameToDocument, getDefaultValues, getMainDefinition, getQueryDefinition, getFragmentFromSelection, maybeDeepFreeze, mergeDeepArray, DeepMerger, isNonNullObject, canUseWeakMap, compact, } from \"../../utilities/index.js\";\nimport { maybeDependOnExistenceOfEntity, supportsResultCaching } from \"./entityStore.js\";\nimport { isArray, extractFragmentContext, getTypenameFromStoreObject, shouldCanonizeResults } from \"./helpers.js\";\nimport { MissingFieldError } from \"../core/types/common.js\";\nimport { canonicalStringify, ObjectCanon } from \"./object-canon.js\";\n;\nfunction execSelectionSetKeyArgs(options) {\n    return [\n        options.selectionSet,\n        options.objectOrReference,\n        options.context,\n        options.context.canonizeResults,\n    ];\n}\nvar StoreReader = (function () {\n    function StoreReader(config) {\n        var _this = this;\n        this.knownResults = new (canUseWeakMap ? WeakMap : Map)();\n        this.config = compact(config, {\n            addTypename: config.addTypename !== false,\n            canonizeResults: shouldCanonizeResults(config),\n        });\n        this.canon = config.canon || new ObjectCanon;\n        this.executeSelectionSet = wrap(function (options) {\n            var _a;\n            var canonizeResults = options.context.canonizeResults;\n            var peekArgs = execSelectionSetKeyArgs(options);\n            peekArgs[3] = !canonizeResults;\n            var other = (_a = _this.executeSelectionSet).peek.apply(_a, peekArgs);\n            if (other) {\n                if (canonizeResults) {\n                    return __assign(__assign({}, other), { result: _this.canon.admit(other.result) });\n                }\n                return other;\n            }\n            maybeDependOnExistenceOfEntity(options.context.store, options.enclosingRef.__ref);\n            return _this.execSelectionSetImpl(options);\n        }, {\n            max: this.config.resultCacheMaxSize,\n            keyArgs: execSelectionSetKeyArgs,\n            makeCacheKey: function (selectionSet, parent, context, canonizeResults) {\n                if (supportsResultCaching(context.store)) {\n                    return context.store.makeCacheKey(selectionSet, isReference(parent) ? parent.__ref : parent, context.varString, canonizeResults);\n                }\n            }\n        });\n        this.executeSubSelectedArray = wrap(function (options) {\n            maybeDependOnExistenceOfEntity(options.context.store, options.enclosingRef.__ref);\n            return _this.execSubSelectedArrayImpl(options);\n        }, {\n            max: this.config.resultCacheMaxSize,\n            makeCacheKey: function (_a) {\n                var field = _a.field, array = _a.array, context = _a.context;\n                if (supportsResultCaching(context.store)) {\n                    return context.store.makeCacheKey(field, array, context.varString);\n                }\n            }\n        });\n    }\n    StoreReader.prototype.resetCanon = function () {\n        this.canon = new ObjectCanon;\n    };\n    StoreReader.prototype.diffQueryAgainstStore = function (_a) {\n        var store = _a.store, query = _a.query, _b = _a.rootId, rootId = _b === void 0 ? 'ROOT_QUERY' : _b, variables = _a.variables, _c = _a.returnPartialData, returnPartialData = _c === void 0 ? true : _c, _d = _a.canonizeResults, canonizeResults = _d === void 0 ? this.config.canonizeResults : _d;\n        var policies = this.config.cache.policies;\n        variables = __assign(__assign({}, getDefaultValues(getQueryDefinition(query))), variables);\n        var rootRef = makeReference(rootId);\n        var execResult = this.executeSelectionSet({\n            selectionSet: getMainDefinition(query).selectionSet,\n            objectOrReference: rootRef,\n            enclosingRef: rootRef,\n            context: __assign({ store: store, query: query, policies: policies, variables: variables, varString: canonicalStringify(variables), canonizeResults: canonizeResults }, extractFragmentContext(query, this.config.fragments)),\n        });\n        var missing;\n        if (execResult.missing) {\n            missing = [new MissingFieldError(firstMissing(execResult.missing), execResult.missing, query, variables)];\n            if (!returnPartialData) {\n                throw missing[0];\n            }\n        }\n        return {\n            result: execResult.result,\n            complete: !missing,\n            missing: missing,\n        };\n    };\n    StoreReader.prototype.isFresh = function (result, parent, selectionSet, context) {\n        if (supportsResultCaching(context.store) &&\n            this.knownResults.get(result) === selectionSet) {\n            var latest = this.executeSelectionSet.peek(selectionSet, parent, context, this.canon.isKnown(result));\n            if (latest && result === latest.result) {\n                return true;\n            }\n        }\n        return false;\n    };\n    StoreReader.prototype.execSelectionSetImpl = function (_a) {\n        var _this = this;\n        var selectionSet = _a.selectionSet, objectOrReference = _a.objectOrReference, enclosingRef = _a.enclosingRef, context = _a.context;\n        if (isReference(objectOrReference) &&\n            !context.policies.rootTypenamesById[objectOrReference.__ref] &&\n            !context.store.has(objectOrReference.__ref)) {\n            return {\n                result: this.canon.empty,\n                missing: \"Dangling reference to missing \".concat(objectOrReference.__ref, \" object\"),\n            };\n        }\n        var variables = context.variables, policies = context.policies, store = context.store;\n        var typename = store.getFieldValue(objectOrReference, \"__typename\");\n        var objectsToMerge = [];\n        var missing;\n        var missingMerger = new DeepMerger();\n        if (this.config.addTypename &&\n            typeof typename === \"string\" &&\n            !policies.rootIdsByTypename[typename]) {\n            objectsToMerge.push({ __typename: typename });\n        }\n        function handleMissing(result, resultName) {\n            var _a;\n            if (result.missing) {\n                missing = missingMerger.merge(missing, (_a = {}, _a[resultName] = result.missing, _a));\n            }\n            return result.result;\n        }\n        var workSet = new Set(selectionSet.selections);\n        workSet.forEach(function (selection) {\n            var _a, _b;\n            if (!shouldInclude(selection, variables))\n                return;\n            if (isField(selection)) {\n                var fieldValue = policies.readField({\n                    fieldName: selection.name.value,\n                    field: selection,\n                    variables: context.variables,\n                    from: objectOrReference,\n                }, context);\n                var resultName = resultKeyNameFromField(selection);\n                if (fieldValue === void 0) {\n                    if (!addTypenameToDocument.added(selection)) {\n                        missing = missingMerger.merge(missing, (_a = {},\n                            _a[resultName] = \"Can't find field '\".concat(selection.name.value, \"' on \").concat(isReference(objectOrReference)\n                                ? objectOrReference.__ref + \" object\"\n                                : \"object \" + JSON.stringify(objectOrReference, null, 2)),\n                            _a));\n                    }\n                }\n                else if (isArray(fieldValue)) {\n                    fieldValue = handleMissing(_this.executeSubSelectedArray({\n                        field: selection,\n                        array: fieldValue,\n                        enclosingRef: enclosingRef,\n                        context: context,\n                    }), resultName);\n                }\n                else if (!selection.selectionSet) {\n                    if (context.canonizeResults) {\n                        fieldValue = _this.canon.pass(fieldValue);\n                    }\n                }\n                else if (fieldValue != null) {\n                    fieldValue = handleMissing(_this.executeSelectionSet({\n                        selectionSet: selection.selectionSet,\n                        objectOrReference: fieldValue,\n                        enclosingRef: isReference(fieldValue) ? fieldValue : enclosingRef,\n                        context: context,\n                    }), resultName);\n                }\n                if (fieldValue !== void 0) {\n                    objectsToMerge.push((_b = {}, _b[resultName] = fieldValue, _b));\n                }\n            }\n            else {\n                var fragment = getFragmentFromSelection(selection, context.lookupFragment);\n                if (!fragment && selection.kind === Kind.FRAGMENT_SPREAD) {\n                    throw __DEV__ ? new InvariantError(\"No fragment named \".concat(selection.name.value)) : new InvariantError(5);\n                }\n                if (fragment && policies.fragmentMatches(fragment, typename)) {\n                    fragment.selectionSet.selections.forEach(workSet.add, workSet);\n                }\n            }\n        });\n        var result = mergeDeepArray(objectsToMerge);\n        var finalResult = { result: result, missing: missing };\n        var frozen = context.canonizeResults\n            ? this.canon.admit(finalResult)\n            : maybeDeepFreeze(finalResult);\n        if (frozen.result) {\n            this.knownResults.set(frozen.result, selectionSet);\n        }\n        return frozen;\n    };\n    StoreReader.prototype.execSubSelectedArrayImpl = function (_a) {\n        var _this = this;\n        var field = _a.field, array = _a.array, enclosingRef = _a.enclosingRef, context = _a.context;\n        var missing;\n        var missingMerger = new DeepMerger();\n        function handleMissing(childResult, i) {\n            var _a;\n            if (childResult.missing) {\n                missing = missingMerger.merge(missing, (_a = {}, _a[i] = childResult.missing, _a));\n            }\n            return childResult.result;\n        }\n        if (field.selectionSet) {\n            array = array.filter(context.store.canRead);\n        }\n        array = array.map(function (item, i) {\n            if (item === null) {\n                return null;\n            }\n            if (isArray(item)) {\n                return handleMissing(_this.executeSubSelectedArray({\n                    field: field,\n                    array: item,\n                    enclosingRef: enclosingRef,\n                    context: context,\n                }), i);\n            }\n            if (field.selectionSet) {\n                return handleMissing(_this.executeSelectionSet({\n                    selectionSet: field.selectionSet,\n                    objectOrReference: item,\n                    enclosingRef: isReference(item) ? item : enclosingRef,\n                    context: context,\n                }), i);\n            }\n            if (__DEV__) {\n                assertSelectionSetForIdValue(context.store, field, item);\n            }\n            return item;\n        });\n        return {\n            result: context.canonizeResults ? this.canon.admit(array) : array,\n            missing: missing,\n        };\n    };\n    return StoreReader;\n}());\nexport { StoreReader };\nfunction firstMissing(tree) {\n    try {\n        JSON.stringify(tree, function (_, value) {\n            if (typeof value === \"string\")\n                throw value;\n            return value;\n        });\n    }\n    catch (result) {\n        return result;\n    }\n}\nfunction assertSelectionSetForIdValue(store, field, fieldValue) {\n    if (!field.selectionSet) {\n        var workSet_1 = new Set([fieldValue]);\n        workSet_1.forEach(function (value) {\n            if (isNonNullObject(value)) {\n                __DEV__ ? invariant(!isReference(value), \"Missing selection set for object of type \".concat(getTypenameFromStoreObject(store, value), \" returned for query field \").concat(field.name.value)) : invariant(!isReference(value), 6);\n                Object.values(value).forEach(workSet_1.add, workSet_1);\n            }\n        });\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}