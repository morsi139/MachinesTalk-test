{"ast":null,"code":"import { Observable } from \"./Observable.js\";\nexport function asyncMap(observable, mapFn, catchFn) {\n  return new Observable(function (observer) {\n    var next = observer.next,\n        error = observer.error,\n        complete = observer.complete;\n    var activeCallbackCount = 0;\n    var completed = false;\n    var promiseQueue = {\n      then: function (callback) {\n        return new Promise(function (resolve) {\n          return resolve(callback());\n        });\n      }\n    };\n\n    function makeCallback(examiner, delegate) {\n      if (examiner) {\n        return function (arg) {\n          ++activeCallbackCount;\n\n          var both = function () {\n            return examiner(arg);\n          };\n\n          promiseQueue = promiseQueue.then(both, both).then(function (result) {\n            --activeCallbackCount;\n            next && next.call(observer, result);\n\n            if (completed) {\n              handler.complete();\n            }\n          }, function (error) {\n            --activeCallbackCount;\n            throw error;\n          }).catch(function (caught) {\n            error && error.call(observer, caught);\n          });\n        };\n      } else {\n        return function (arg) {\n          return delegate && delegate.call(observer, arg);\n        };\n      }\n    }\n\n    var handler = {\n      next: makeCallback(mapFn, next),\n      error: makeCallback(catchFn, error),\n      complete: function () {\n        completed = true;\n\n        if (!activeCallbackCount) {\n          complete && complete.call(observer);\n        }\n      }\n    };\n    var sub = observable.subscribe(handler);\n    return function () {\n      return sub.unsubscribe();\n    };\n  });\n}","map":{"version":3,"names":["Observable","asyncMap","observable","mapFn","catchFn","observer","next","error","complete","activeCallbackCount","completed","promiseQueue","then","callback","Promise","resolve","makeCallback","examiner","delegate","arg","both","result","call","handler","catch","caught","sub","subscribe","unsubscribe"],"sources":["F:/Bureau/Test_MachinesTalk/MachinesTalk/node_modules/@apollo/client/utilities/observables/asyncMap.js"],"sourcesContent":["import { Observable } from \"./Observable.js\";\nexport function asyncMap(observable, mapFn, catchFn) {\n    return new Observable(function (observer) {\n        var next = observer.next, error = observer.error, complete = observer.complete;\n        var activeCallbackCount = 0;\n        var completed = false;\n        var promiseQueue = {\n            then: function (callback) {\n                return new Promise(function (resolve) { return resolve(callback()); });\n            },\n        };\n        function makeCallback(examiner, delegate) {\n            if (examiner) {\n                return function (arg) {\n                    ++activeCallbackCount;\n                    var both = function () { return examiner(arg); };\n                    promiseQueue = promiseQueue.then(both, both).then(function (result) {\n                        --activeCallbackCount;\n                        next && next.call(observer, result);\n                        if (completed) {\n                            handler.complete();\n                        }\n                    }, function (error) {\n                        --activeCallbackCount;\n                        throw error;\n                    }).catch(function (caught) {\n                        error && error.call(observer, caught);\n                    });\n                };\n            }\n            else {\n                return function (arg) { return delegate && delegate.call(observer, arg); };\n            }\n        }\n        var handler = {\n            next: makeCallback(mapFn, next),\n            error: makeCallback(catchFn, error),\n            complete: function () {\n                completed = true;\n                if (!activeCallbackCount) {\n                    complete && complete.call(observer);\n                }\n            },\n        };\n        var sub = observable.subscribe(handler);\n        return function () { return sub.unsubscribe(); };\n    });\n}\n"],"mappings":"AAAA,SAASA,UAAT,QAA2B,iBAA3B;AACA,OAAO,SAASC,QAAT,CAAkBC,UAAlB,EAA8BC,KAA9B,EAAqCC,OAArC,EAA8C;EACjD,OAAO,IAAIJ,UAAJ,CAAe,UAAUK,QAAV,EAAoB;IACtC,IAAIC,IAAI,GAAGD,QAAQ,CAACC,IAApB;IAAA,IAA0BC,KAAK,GAAGF,QAAQ,CAACE,KAA3C;IAAA,IAAkDC,QAAQ,GAAGH,QAAQ,CAACG,QAAtE;IACA,IAAIC,mBAAmB,GAAG,CAA1B;IACA,IAAIC,SAAS,GAAG,KAAhB;IACA,IAAIC,YAAY,GAAG;MACfC,IAAI,EAAE,UAAUC,QAAV,EAAoB;QACtB,OAAO,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmB;UAAE,OAAOA,OAAO,CAACF,QAAQ,EAAT,CAAd;QAA6B,CAA9D,CAAP;MACH;IAHc,CAAnB;;IAKA,SAASG,YAAT,CAAsBC,QAAtB,EAAgCC,QAAhC,EAA0C;MACtC,IAAID,QAAJ,EAAc;QACV,OAAO,UAAUE,GAAV,EAAe;UAClB,EAAEV,mBAAF;;UACA,IAAIW,IAAI,GAAG,YAAY;YAAE,OAAOH,QAAQ,CAACE,GAAD,CAAf;UAAuB,CAAhD;;UACAR,YAAY,GAAGA,YAAY,CAACC,IAAb,CAAkBQ,IAAlB,EAAwBA,IAAxB,EAA8BR,IAA9B,CAAmC,UAAUS,MAAV,EAAkB;YAChE,EAAEZ,mBAAF;YACAH,IAAI,IAAIA,IAAI,CAACgB,IAAL,CAAUjB,QAAV,EAAoBgB,MAApB,CAAR;;YACA,IAAIX,SAAJ,EAAe;cACXa,OAAO,CAACf,QAAR;YACH;UACJ,CANc,EAMZ,UAAUD,KAAV,EAAiB;YAChB,EAAEE,mBAAF;YACA,MAAMF,KAAN;UACH,CATc,EASZiB,KATY,CASN,UAAUC,MAAV,EAAkB;YACvBlB,KAAK,IAAIA,KAAK,CAACe,IAAN,CAAWjB,QAAX,EAAqBoB,MAArB,CAAT;UACH,CAXc,CAAf;QAYH,CAfD;MAgBH,CAjBD,MAkBK;QACD,OAAO,UAAUN,GAAV,EAAe;UAAE,OAAOD,QAAQ,IAAIA,QAAQ,CAACI,IAAT,CAAcjB,QAAd,EAAwBc,GAAxB,CAAnB;QAAkD,CAA1E;MACH;IACJ;;IACD,IAAII,OAAO,GAAG;MACVjB,IAAI,EAAEU,YAAY,CAACb,KAAD,EAAQG,IAAR,CADR;MAEVC,KAAK,EAAES,YAAY,CAACZ,OAAD,EAAUG,KAAV,CAFT;MAGVC,QAAQ,EAAE,YAAY;QAClBE,SAAS,GAAG,IAAZ;;QACA,IAAI,CAACD,mBAAL,EAA0B;UACtBD,QAAQ,IAAIA,QAAQ,CAACc,IAAT,CAAcjB,QAAd,CAAZ;QACH;MACJ;IARS,CAAd;IAUA,IAAIqB,GAAG,GAAGxB,UAAU,CAACyB,SAAX,CAAqBJ,OAArB,CAAV;IACA,OAAO,YAAY;MAAE,OAAOG,GAAG,CAACE,WAAJ,EAAP;IAA2B,CAAhD;EACH,CA5CM,CAAP;AA6CH"},"metadata":{},"sourceType":"module"}