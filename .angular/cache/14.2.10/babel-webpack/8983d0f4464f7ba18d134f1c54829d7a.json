{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Observable } from \"./Observable.js\";\nimport { iterateObserversSafely } from \"./iteration.js\";\nimport { fixObservableSubclass } from \"./subclassing.js\";\n\nfunction isPromiseLike(value) {\n  return value && typeof value.then === \"function\";\n}\n\nvar Concast = function (_super) {\n  __extends(Concast, _super);\n\n  function Concast(sources) {\n    var _this = _super.call(this, function (observer) {\n      _this.addObserver(observer);\n\n      return function () {\n        return _this.removeObserver(observer);\n      };\n    }) || this;\n\n    _this.observers = new Set();\n    _this.promise = new Promise(function (resolve, reject) {\n      _this.resolve = resolve;\n      _this.reject = reject;\n    });\n    _this.handlers = {\n      next: function (result) {\n        if (_this.sub !== null) {\n          _this.latest = [\"next\", result];\n\n          _this.notify(\"next\", result);\n\n          iterateObserversSafely(_this.observers, \"next\", result);\n        }\n      },\n      error: function (error) {\n        var sub = _this.sub;\n\n        if (sub !== null) {\n          if (sub) setTimeout(function () {\n            return sub.unsubscribe();\n          });\n          _this.sub = null;\n          _this.latest = [\"error\", error];\n\n          _this.reject(error);\n\n          _this.notify(\"error\", error);\n\n          iterateObserversSafely(_this.observers, \"error\", error);\n        }\n      },\n      complete: function () {\n        var sub = _this.sub;\n\n        if (sub !== null) {\n          var value = _this.sources.shift();\n\n          if (!value) {\n            if (sub) setTimeout(function () {\n              return sub.unsubscribe();\n            });\n            _this.sub = null;\n\n            if (_this.latest && _this.latest[0] === \"next\") {\n              _this.resolve(_this.latest[1]);\n            } else {\n              _this.resolve();\n            }\n\n            _this.notify(\"complete\");\n\n            iterateObserversSafely(_this.observers, \"complete\");\n          } else if (isPromiseLike(value)) {\n            value.then(function (obs) {\n              return _this.sub = obs.subscribe(_this.handlers);\n            });\n          } else {\n            _this.sub = value.subscribe(_this.handlers);\n          }\n        }\n      }\n    };\n    _this.nextResultListeners = new Set();\n\n    _this.cancel = function (reason) {\n      _this.reject(reason);\n\n      _this.sources = [];\n\n      _this.handlers.complete();\n    };\n\n    _this.promise.catch(function (_) {});\n\n    if (typeof sources === \"function\") {\n      sources = [new Observable(sources)];\n    }\n\n    if (isPromiseLike(sources)) {\n      sources.then(function (iterable) {\n        return _this.start(iterable);\n      }, _this.handlers.error);\n    } else {\n      _this.start(sources);\n    }\n\n    return _this;\n  }\n\n  Concast.prototype.start = function (sources) {\n    if (this.sub !== void 0) return;\n    this.sources = Array.from(sources);\n    this.handlers.complete();\n  };\n\n  Concast.prototype.deliverLastMessage = function (observer) {\n    if (this.latest) {\n      var nextOrError = this.latest[0];\n      var method = observer[nextOrError];\n\n      if (method) {\n        method.call(observer, this.latest[1]);\n      }\n\n      if (this.sub === null && nextOrError === \"next\" && observer.complete) {\n        observer.complete();\n      }\n    }\n  };\n\n  Concast.prototype.addObserver = function (observer) {\n    if (!this.observers.has(observer)) {\n      this.deliverLastMessage(observer);\n      this.observers.add(observer);\n    }\n  };\n\n  Concast.prototype.removeObserver = function (observer) {\n    if (this.observers.delete(observer) && this.observers.size < 1) {\n      this.handlers.complete();\n    }\n  };\n\n  Concast.prototype.notify = function (method, arg) {\n    var nextResultListeners = this.nextResultListeners;\n\n    if (nextResultListeners.size) {\n      this.nextResultListeners = new Set();\n      nextResultListeners.forEach(function (listener) {\n        return listener(method, arg);\n      });\n    }\n  };\n\n  Concast.prototype.beforeNext = function (callback) {\n    var called = false;\n    this.nextResultListeners.add(function (method, arg) {\n      if (!called) {\n        called = true;\n        callback(method, arg);\n      }\n    });\n  };\n\n  return Concast;\n}(Observable);\n\nexport { Concast };\nfixObservableSubclass(Concast);","map":{"version":3,"names":["__extends","Observable","iterateObserversSafely","fixObservableSubclass","isPromiseLike","value","then","Concast","_super","sources","_this","call","observer","addObserver","removeObserver","observers","Set","promise","Promise","resolve","reject","handlers","next","result","sub","latest","notify","error","setTimeout","unsubscribe","complete","shift","obs","subscribe","nextResultListeners","cancel","reason","catch","_","iterable","start","prototype","Array","from","deliverLastMessage","nextOrError","method","has","add","delete","size","arg","forEach","listener","beforeNext","callback","called"],"sources":["F:/Bureau/Test_MachinesTalk/MachinesTalk/node_modules/@apollo/client/utilities/observables/Concast.js"],"sourcesContent":["import { __extends } from \"tslib\";\nimport { Observable } from \"./Observable.js\";\nimport { iterateObserversSafely } from \"./iteration.js\";\nimport { fixObservableSubclass } from \"./subclassing.js\";\nfunction isPromiseLike(value) {\n    return value && typeof value.then === \"function\";\n}\nvar Concast = (function (_super) {\n    __extends(Concast, _super);\n    function Concast(sources) {\n        var _this = _super.call(this, function (observer) {\n            _this.addObserver(observer);\n            return function () { return _this.removeObserver(observer); };\n        }) || this;\n        _this.observers = new Set();\n        _this.promise = new Promise(function (resolve, reject) {\n            _this.resolve = resolve;\n            _this.reject = reject;\n        });\n        _this.handlers = {\n            next: function (result) {\n                if (_this.sub !== null) {\n                    _this.latest = [\"next\", result];\n                    _this.notify(\"next\", result);\n                    iterateObserversSafely(_this.observers, \"next\", result);\n                }\n            },\n            error: function (error) {\n                var sub = _this.sub;\n                if (sub !== null) {\n                    if (sub)\n                        setTimeout(function () { return sub.unsubscribe(); });\n                    _this.sub = null;\n                    _this.latest = [\"error\", error];\n                    _this.reject(error);\n                    _this.notify(\"error\", error);\n                    iterateObserversSafely(_this.observers, \"error\", error);\n                }\n            },\n            complete: function () {\n                var sub = _this.sub;\n                if (sub !== null) {\n                    var value = _this.sources.shift();\n                    if (!value) {\n                        if (sub)\n                            setTimeout(function () { return sub.unsubscribe(); });\n                        _this.sub = null;\n                        if (_this.latest &&\n                            _this.latest[0] === \"next\") {\n                            _this.resolve(_this.latest[1]);\n                        }\n                        else {\n                            _this.resolve();\n                        }\n                        _this.notify(\"complete\");\n                        iterateObserversSafely(_this.observers, \"complete\");\n                    }\n                    else if (isPromiseLike(value)) {\n                        value.then(function (obs) { return _this.sub = obs.subscribe(_this.handlers); });\n                    }\n                    else {\n                        _this.sub = value.subscribe(_this.handlers);\n                    }\n                }\n            },\n        };\n        _this.nextResultListeners = new Set();\n        _this.cancel = function (reason) {\n            _this.reject(reason);\n            _this.sources = [];\n            _this.handlers.complete();\n        };\n        _this.promise.catch(function (_) { });\n        if (typeof sources === \"function\") {\n            sources = [new Observable(sources)];\n        }\n        if (isPromiseLike(sources)) {\n            sources.then(function (iterable) { return _this.start(iterable); }, _this.handlers.error);\n        }\n        else {\n            _this.start(sources);\n        }\n        return _this;\n    }\n    Concast.prototype.start = function (sources) {\n        if (this.sub !== void 0)\n            return;\n        this.sources = Array.from(sources);\n        this.handlers.complete();\n    };\n    Concast.prototype.deliverLastMessage = function (observer) {\n        if (this.latest) {\n            var nextOrError = this.latest[0];\n            var method = observer[nextOrError];\n            if (method) {\n                method.call(observer, this.latest[1]);\n            }\n            if (this.sub === null &&\n                nextOrError === \"next\" &&\n                observer.complete) {\n                observer.complete();\n            }\n        }\n    };\n    Concast.prototype.addObserver = function (observer) {\n        if (!this.observers.has(observer)) {\n            this.deliverLastMessage(observer);\n            this.observers.add(observer);\n        }\n    };\n    Concast.prototype.removeObserver = function (observer) {\n        if (this.observers.delete(observer) &&\n            this.observers.size < 1) {\n            this.handlers.complete();\n        }\n    };\n    Concast.prototype.notify = function (method, arg) {\n        var nextResultListeners = this.nextResultListeners;\n        if (nextResultListeners.size) {\n            this.nextResultListeners = new Set;\n            nextResultListeners.forEach(function (listener) { return listener(method, arg); });\n        }\n    };\n    Concast.prototype.beforeNext = function (callback) {\n        var called = false;\n        this.nextResultListeners.add(function (method, arg) {\n            if (!called) {\n                called = true;\n                callback(method, arg);\n            }\n        });\n    };\n    return Concast;\n}(Observable));\nexport { Concast };\nfixObservableSubclass(Concast);\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,sBAAT,QAAuC,gBAAvC;AACA,SAASC,qBAAT,QAAsC,kBAAtC;;AACA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;EAC1B,OAAOA,KAAK,IAAI,OAAOA,KAAK,CAACC,IAAb,KAAsB,UAAtC;AACH;;AACD,IAAIC,OAAO,GAAI,UAAUC,MAAV,EAAkB;EAC7BR,SAAS,CAACO,OAAD,EAAUC,MAAV,CAAT;;EACA,SAASD,OAAT,CAAiBE,OAAjB,EAA0B;IACtB,IAAIC,KAAK,GAAGF,MAAM,CAACG,IAAP,CAAY,IAAZ,EAAkB,UAAUC,QAAV,EAAoB;MAC9CF,KAAK,CAACG,WAAN,CAAkBD,QAAlB;;MACA,OAAO,YAAY;QAAE,OAAOF,KAAK,CAACI,cAAN,CAAqBF,QAArB,CAAP;MAAwC,CAA7D;IACH,CAHW,KAGN,IAHN;;IAIAF,KAAK,CAACK,SAAN,GAAkB,IAAIC,GAAJ,EAAlB;IACAN,KAAK,CAACO,OAAN,GAAgB,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;MACnDV,KAAK,CAACS,OAAN,GAAgBA,OAAhB;MACAT,KAAK,CAACU,MAAN,GAAeA,MAAf;IACH,CAHe,CAAhB;IAIAV,KAAK,CAACW,QAAN,GAAiB;MACbC,IAAI,EAAE,UAAUC,MAAV,EAAkB;QACpB,IAAIb,KAAK,CAACc,GAAN,KAAc,IAAlB,EAAwB;UACpBd,KAAK,CAACe,MAAN,GAAe,CAAC,MAAD,EAASF,MAAT,CAAf;;UACAb,KAAK,CAACgB,MAAN,CAAa,MAAb,EAAqBH,MAArB;;UACArB,sBAAsB,CAACQ,KAAK,CAACK,SAAP,EAAkB,MAAlB,EAA0BQ,MAA1B,CAAtB;QACH;MACJ,CAPY;MAQbI,KAAK,EAAE,UAAUA,KAAV,EAAiB;QACpB,IAAIH,GAAG,GAAGd,KAAK,CAACc,GAAhB;;QACA,IAAIA,GAAG,KAAK,IAAZ,EAAkB;UACd,IAAIA,GAAJ,EACII,UAAU,CAAC,YAAY;YAAE,OAAOJ,GAAG,CAACK,WAAJ,EAAP;UAA2B,CAA1C,CAAV;UACJnB,KAAK,CAACc,GAAN,GAAY,IAAZ;UACAd,KAAK,CAACe,MAAN,GAAe,CAAC,OAAD,EAAUE,KAAV,CAAf;;UACAjB,KAAK,CAACU,MAAN,CAAaO,KAAb;;UACAjB,KAAK,CAACgB,MAAN,CAAa,OAAb,EAAsBC,KAAtB;;UACAzB,sBAAsB,CAACQ,KAAK,CAACK,SAAP,EAAkB,OAAlB,EAA2BY,KAA3B,CAAtB;QACH;MACJ,CAnBY;MAoBbG,QAAQ,EAAE,YAAY;QAClB,IAAIN,GAAG,GAAGd,KAAK,CAACc,GAAhB;;QACA,IAAIA,GAAG,KAAK,IAAZ,EAAkB;UACd,IAAInB,KAAK,GAAGK,KAAK,CAACD,OAAN,CAAcsB,KAAd,EAAZ;;UACA,IAAI,CAAC1B,KAAL,EAAY;YACR,IAAImB,GAAJ,EACII,UAAU,CAAC,YAAY;cAAE,OAAOJ,GAAG,CAACK,WAAJ,EAAP;YAA2B,CAA1C,CAAV;YACJnB,KAAK,CAACc,GAAN,GAAY,IAAZ;;YACA,IAAId,KAAK,CAACe,MAAN,IACAf,KAAK,CAACe,MAAN,CAAa,CAAb,MAAoB,MADxB,EACgC;cAC5Bf,KAAK,CAACS,OAAN,CAAcT,KAAK,CAACe,MAAN,CAAa,CAAb,CAAd;YACH,CAHD,MAIK;cACDf,KAAK,CAACS,OAAN;YACH;;YACDT,KAAK,CAACgB,MAAN,CAAa,UAAb;;YACAxB,sBAAsB,CAACQ,KAAK,CAACK,SAAP,EAAkB,UAAlB,CAAtB;UACH,CAbD,MAcK,IAAIX,aAAa,CAACC,KAAD,CAAjB,EAA0B;YAC3BA,KAAK,CAACC,IAAN,CAAW,UAAU0B,GAAV,EAAe;cAAE,OAAOtB,KAAK,CAACc,GAAN,GAAYQ,GAAG,CAACC,SAAJ,CAAcvB,KAAK,CAACW,QAApB,CAAnB;YAAmD,CAA/E;UACH,CAFI,MAGA;YACDX,KAAK,CAACc,GAAN,GAAYnB,KAAK,CAAC4B,SAAN,CAAgBvB,KAAK,CAACW,QAAtB,CAAZ;UACH;QACJ;MACJ;IA7CY,CAAjB;IA+CAX,KAAK,CAACwB,mBAAN,GAA4B,IAAIlB,GAAJ,EAA5B;;IACAN,KAAK,CAACyB,MAAN,GAAe,UAAUC,MAAV,EAAkB;MAC7B1B,KAAK,CAACU,MAAN,CAAagB,MAAb;;MACA1B,KAAK,CAACD,OAAN,GAAgB,EAAhB;;MACAC,KAAK,CAACW,QAAN,CAAeS,QAAf;IACH,CAJD;;IAKApB,KAAK,CAACO,OAAN,CAAcoB,KAAd,CAAoB,UAAUC,CAAV,EAAa,CAAG,CAApC;;IACA,IAAI,OAAO7B,OAAP,KAAmB,UAAvB,EAAmC;MAC/BA,OAAO,GAAG,CAAC,IAAIR,UAAJ,CAAeQ,OAAf,CAAD,CAAV;IACH;;IACD,IAAIL,aAAa,CAACK,OAAD,CAAjB,EAA4B;MACxBA,OAAO,CAACH,IAAR,CAAa,UAAUiC,QAAV,EAAoB;QAAE,OAAO7B,KAAK,CAAC8B,KAAN,CAAYD,QAAZ,CAAP;MAA+B,CAAlE,EAAoE7B,KAAK,CAACW,QAAN,CAAeM,KAAnF;IACH,CAFD,MAGK;MACDjB,KAAK,CAAC8B,KAAN,CAAY/B,OAAZ;IACH;;IACD,OAAOC,KAAP;EACH;;EACDH,OAAO,CAACkC,SAAR,CAAkBD,KAAlB,GAA0B,UAAU/B,OAAV,EAAmB;IACzC,IAAI,KAAKe,GAAL,KAAa,KAAK,CAAtB,EACI;IACJ,KAAKf,OAAL,GAAeiC,KAAK,CAACC,IAAN,CAAWlC,OAAX,CAAf;IACA,KAAKY,QAAL,CAAcS,QAAd;EACH,CALD;;EAMAvB,OAAO,CAACkC,SAAR,CAAkBG,kBAAlB,GAAuC,UAAUhC,QAAV,EAAoB;IACvD,IAAI,KAAKa,MAAT,EAAiB;MACb,IAAIoB,WAAW,GAAG,KAAKpB,MAAL,CAAY,CAAZ,CAAlB;MACA,IAAIqB,MAAM,GAAGlC,QAAQ,CAACiC,WAAD,CAArB;;MACA,IAAIC,MAAJ,EAAY;QACRA,MAAM,CAACnC,IAAP,CAAYC,QAAZ,EAAsB,KAAKa,MAAL,CAAY,CAAZ,CAAtB;MACH;;MACD,IAAI,KAAKD,GAAL,KAAa,IAAb,IACAqB,WAAW,KAAK,MADhB,IAEAjC,QAAQ,CAACkB,QAFb,EAEuB;QACnBlB,QAAQ,CAACkB,QAAT;MACH;IACJ;EACJ,CAbD;;EAcAvB,OAAO,CAACkC,SAAR,CAAkB5B,WAAlB,GAAgC,UAAUD,QAAV,EAAoB;IAChD,IAAI,CAAC,KAAKG,SAAL,CAAegC,GAAf,CAAmBnC,QAAnB,CAAL,EAAmC;MAC/B,KAAKgC,kBAAL,CAAwBhC,QAAxB;MACA,KAAKG,SAAL,CAAeiC,GAAf,CAAmBpC,QAAnB;IACH;EACJ,CALD;;EAMAL,OAAO,CAACkC,SAAR,CAAkB3B,cAAlB,GAAmC,UAAUF,QAAV,EAAoB;IACnD,IAAI,KAAKG,SAAL,CAAekC,MAAf,CAAsBrC,QAAtB,KACA,KAAKG,SAAL,CAAemC,IAAf,GAAsB,CAD1B,EAC6B;MACzB,KAAK7B,QAAL,CAAcS,QAAd;IACH;EACJ,CALD;;EAMAvB,OAAO,CAACkC,SAAR,CAAkBf,MAAlB,GAA2B,UAAUoB,MAAV,EAAkBK,GAAlB,EAAuB;IAC9C,IAAIjB,mBAAmB,GAAG,KAAKA,mBAA/B;;IACA,IAAIA,mBAAmB,CAACgB,IAAxB,EAA8B;MAC1B,KAAKhB,mBAAL,GAA2B,IAAIlB,GAAJ,EAA3B;MACAkB,mBAAmB,CAACkB,OAApB,CAA4B,UAAUC,QAAV,EAAoB;QAAE,OAAOA,QAAQ,CAACP,MAAD,EAASK,GAAT,CAAf;MAA+B,CAAjF;IACH;EACJ,CAND;;EAOA5C,OAAO,CAACkC,SAAR,CAAkBa,UAAlB,GAA+B,UAAUC,QAAV,EAAoB;IAC/C,IAAIC,MAAM,GAAG,KAAb;IACA,KAAKtB,mBAAL,CAAyBc,GAAzB,CAA6B,UAAUF,MAAV,EAAkBK,GAAlB,EAAuB;MAChD,IAAI,CAACK,MAAL,EAAa;QACTA,MAAM,GAAG,IAAT;QACAD,QAAQ,CAACT,MAAD,EAASK,GAAT,CAAR;MACH;IACJ,CALD;EAMH,CARD;;EASA,OAAO5C,OAAP;AACH,CA9Hc,CA8HbN,UA9Ha,CAAf;;AA+HA,SAASM,OAAT;AACAJ,qBAAqB,CAACI,OAAD,CAArB"},"metadata":{},"sourceType":"module"}