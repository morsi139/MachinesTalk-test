{"ast":null,"code":"import { InvariantError } from \"../globals/index.js\";\nimport { isNonNullObject } from \"../common/objects.js\";\nimport { getFragmentFromSelection } from \"./fragments.js\";\nexport function makeReference(id) {\n  return {\n    __ref: String(id)\n  };\n}\nexport function isReference(obj) {\n  return Boolean(obj && typeof obj === 'object' && typeof obj.__ref === 'string');\n}\nexport function isDocumentNode(value) {\n  return isNonNullObject(value) && value.kind === \"Document\" && Array.isArray(value.definitions);\n}\n\nfunction isStringValue(value) {\n  return value.kind === 'StringValue';\n}\n\nfunction isBooleanValue(value) {\n  return value.kind === 'BooleanValue';\n}\n\nfunction isIntValue(value) {\n  return value.kind === 'IntValue';\n}\n\nfunction isFloatValue(value) {\n  return value.kind === 'FloatValue';\n}\n\nfunction isVariable(value) {\n  return value.kind === 'Variable';\n}\n\nfunction isObjectValue(value) {\n  return value.kind === 'ObjectValue';\n}\n\nfunction isListValue(value) {\n  return value.kind === 'ListValue';\n}\n\nfunction isEnumValue(value) {\n  return value.kind === 'EnumValue';\n}\n\nfunction isNullValue(value) {\n  return value.kind === 'NullValue';\n}\n\nexport function valueToObjectRepresentation(argObj, name, value, variables) {\n  if (isIntValue(value) || isFloatValue(value)) {\n    argObj[name.value] = Number(value.value);\n  } else if (isBooleanValue(value) || isStringValue(value)) {\n    argObj[name.value] = value.value;\n  } else if (isObjectValue(value)) {\n    var nestedArgObj_1 = {};\n    value.fields.map(function (obj) {\n      return valueToObjectRepresentation(nestedArgObj_1, obj.name, obj.value, variables);\n    });\n    argObj[name.value] = nestedArgObj_1;\n  } else if (isVariable(value)) {\n    var variableValue = (variables || {})[value.name.value];\n    argObj[name.value] = variableValue;\n  } else if (isListValue(value)) {\n    argObj[name.value] = value.values.map(function (listValue) {\n      var nestedArgArrayObj = {};\n      valueToObjectRepresentation(nestedArgArrayObj, name, listValue, variables);\n      return nestedArgArrayObj[name.value];\n    });\n  } else if (isEnumValue(value)) {\n    argObj[name.value] = value.value;\n  } else if (isNullValue(value)) {\n    argObj[name.value] = null;\n  } else {\n    throw __DEV__ ? new InvariantError(\"The inline argument \\\"\".concat(name.value, \"\\\" of kind \\\"\").concat(value.kind, \"\\\"\") + 'is not supported. Use variables instead of inline arguments to ' + 'overcome this limitation.') : new InvariantError(54);\n  }\n}\nexport function storeKeyNameFromField(field, variables) {\n  var directivesObj = null;\n\n  if (field.directives) {\n    directivesObj = {};\n    field.directives.forEach(function (directive) {\n      directivesObj[directive.name.value] = {};\n\n      if (directive.arguments) {\n        directive.arguments.forEach(function (_a) {\n          var name = _a.name,\n              value = _a.value;\n          return valueToObjectRepresentation(directivesObj[directive.name.value], name, value, variables);\n        });\n      }\n    });\n  }\n\n  var argObj = null;\n\n  if (field.arguments && field.arguments.length) {\n    argObj = {};\n    field.arguments.forEach(function (_a) {\n      var name = _a.name,\n          value = _a.value;\n      return valueToObjectRepresentation(argObj, name, value, variables);\n    });\n  }\n\n  return getStoreKeyName(field.name.value, argObj, directivesObj);\n}\nvar KNOWN_DIRECTIVES = ['connection', 'include', 'skip', 'client', 'rest', 'export'];\nexport var getStoreKeyName = Object.assign(function (fieldName, args, directives) {\n  if (args && directives && directives['connection'] && directives['connection']['key']) {\n    if (directives['connection']['filter'] && directives['connection']['filter'].length > 0) {\n      var filterKeys = directives['connection']['filter'] ? directives['connection']['filter'] : [];\n      filterKeys.sort();\n      var filteredArgs_1 = {};\n      filterKeys.forEach(function (key) {\n        filteredArgs_1[key] = args[key];\n      });\n      return \"\".concat(directives['connection']['key'], \"(\").concat(stringify(filteredArgs_1), \")\");\n    } else {\n      return directives['connection']['key'];\n    }\n  }\n\n  var completeFieldName = fieldName;\n\n  if (args) {\n    var stringifiedArgs = stringify(args);\n    completeFieldName += \"(\".concat(stringifiedArgs, \")\");\n  }\n\n  if (directives) {\n    Object.keys(directives).forEach(function (key) {\n      if (KNOWN_DIRECTIVES.indexOf(key) !== -1) return;\n\n      if (directives[key] && Object.keys(directives[key]).length) {\n        completeFieldName += \"@\".concat(key, \"(\").concat(stringify(directives[key]), \")\");\n      } else {\n        completeFieldName += \"@\".concat(key);\n      }\n    });\n  }\n\n  return completeFieldName;\n}, {\n  setStringify: function (s) {\n    var previous = stringify;\n    stringify = s;\n    return previous;\n  }\n});\n\nvar stringify = function defaultStringify(value) {\n  return JSON.stringify(value, stringifyReplacer);\n};\n\nfunction stringifyReplacer(_key, value) {\n  if (isNonNullObject(value) && !Array.isArray(value)) {\n    value = Object.keys(value).sort().reduce(function (copy, key) {\n      copy[key] = value[key];\n      return copy;\n    }, {});\n  }\n\n  return value;\n}\n\nexport function argumentsObjectFromField(field, variables) {\n  if (field.arguments && field.arguments.length) {\n    var argObj_1 = {};\n    field.arguments.forEach(function (_a) {\n      var name = _a.name,\n          value = _a.value;\n      return valueToObjectRepresentation(argObj_1, name, value, variables);\n    });\n    return argObj_1;\n  }\n\n  return null;\n}\nexport function resultKeyNameFromField(field) {\n  return field.alias ? field.alias.value : field.name.value;\n}\nexport function getTypenameFromResult(result, selectionSet, fragmentMap) {\n  if (typeof result.__typename === 'string') {\n    return result.__typename;\n  }\n\n  for (var _i = 0, _a = selectionSet.selections; _i < _a.length; _i++) {\n    var selection = _a[_i];\n\n    if (isField(selection)) {\n      if (selection.name.value === '__typename') {\n        return result[resultKeyNameFromField(selection)];\n      }\n    } else {\n      var typename = getTypenameFromResult(result, getFragmentFromSelection(selection, fragmentMap).selectionSet, fragmentMap);\n\n      if (typeof typename === 'string') {\n        return typename;\n      }\n    }\n  }\n}\nexport function isField(selection) {\n  return selection.kind === 'Field';\n}\nexport function isInlineFragment(selection) {\n  return selection.kind === 'InlineFragment';\n}","map":{"version":3,"names":["InvariantError","isNonNullObject","getFragmentFromSelection","makeReference","id","__ref","String","isReference","obj","Boolean","isDocumentNode","value","kind","Array","isArray","definitions","isStringValue","isBooleanValue","isIntValue","isFloatValue","isVariable","isObjectValue","isListValue","isEnumValue","isNullValue","valueToObjectRepresentation","argObj","name","variables","Number","nestedArgObj_1","fields","map","variableValue","values","listValue","nestedArgArrayObj","__DEV__","concat","storeKeyNameFromField","field","directivesObj","directives","forEach","directive","arguments","_a","length","getStoreKeyName","KNOWN_DIRECTIVES","Object","assign","fieldName","args","filterKeys","sort","filteredArgs_1","key","stringify","completeFieldName","stringifiedArgs","keys","indexOf","setStringify","s","previous","defaultStringify","JSON","stringifyReplacer","_key","reduce","copy","argumentsObjectFromField","argObj_1","resultKeyNameFromField","alias","getTypenameFromResult","result","selectionSet","fragmentMap","__typename","_i","selections","selection","isField","typename","isInlineFragment"],"sources":["F:/Bureau/Test_MachinesTalk/MachinesTalk/node_modules/@apollo/client/utilities/graphql/storeUtils.js"],"sourcesContent":["import { InvariantError } from \"../globals/index.js\";\nimport { isNonNullObject } from \"../common/objects.js\";\nimport { getFragmentFromSelection } from \"./fragments.js\";\nexport function makeReference(id) {\n    return { __ref: String(id) };\n}\nexport function isReference(obj) {\n    return Boolean(obj && typeof obj === 'object' && typeof obj.__ref === 'string');\n}\nexport function isDocumentNode(value) {\n    return (isNonNullObject(value) &&\n        value.kind === \"Document\" &&\n        Array.isArray(value.definitions));\n}\nfunction isStringValue(value) {\n    return value.kind === 'StringValue';\n}\nfunction isBooleanValue(value) {\n    return value.kind === 'BooleanValue';\n}\nfunction isIntValue(value) {\n    return value.kind === 'IntValue';\n}\nfunction isFloatValue(value) {\n    return value.kind === 'FloatValue';\n}\nfunction isVariable(value) {\n    return value.kind === 'Variable';\n}\nfunction isObjectValue(value) {\n    return value.kind === 'ObjectValue';\n}\nfunction isListValue(value) {\n    return value.kind === 'ListValue';\n}\nfunction isEnumValue(value) {\n    return value.kind === 'EnumValue';\n}\nfunction isNullValue(value) {\n    return value.kind === 'NullValue';\n}\nexport function valueToObjectRepresentation(argObj, name, value, variables) {\n    if (isIntValue(value) || isFloatValue(value)) {\n        argObj[name.value] = Number(value.value);\n    }\n    else if (isBooleanValue(value) || isStringValue(value)) {\n        argObj[name.value] = value.value;\n    }\n    else if (isObjectValue(value)) {\n        var nestedArgObj_1 = {};\n        value.fields.map(function (obj) {\n            return valueToObjectRepresentation(nestedArgObj_1, obj.name, obj.value, variables);\n        });\n        argObj[name.value] = nestedArgObj_1;\n    }\n    else if (isVariable(value)) {\n        var variableValue = (variables || {})[value.name.value];\n        argObj[name.value] = variableValue;\n    }\n    else if (isListValue(value)) {\n        argObj[name.value] = value.values.map(function (listValue) {\n            var nestedArgArrayObj = {};\n            valueToObjectRepresentation(nestedArgArrayObj, name, listValue, variables);\n            return nestedArgArrayObj[name.value];\n        });\n    }\n    else if (isEnumValue(value)) {\n        argObj[name.value] = value.value;\n    }\n    else if (isNullValue(value)) {\n        argObj[name.value] = null;\n    }\n    else {\n        throw __DEV__ ? new InvariantError(\"The inline argument \\\"\".concat(name.value, \"\\\" of kind \\\"\").concat(value.kind, \"\\\"\") +\n            'is not supported. Use variables instead of inline arguments to ' +\n            'overcome this limitation.') : new InvariantError(54);\n    }\n}\nexport function storeKeyNameFromField(field, variables) {\n    var directivesObj = null;\n    if (field.directives) {\n        directivesObj = {};\n        field.directives.forEach(function (directive) {\n            directivesObj[directive.name.value] = {};\n            if (directive.arguments) {\n                directive.arguments.forEach(function (_a) {\n                    var name = _a.name, value = _a.value;\n                    return valueToObjectRepresentation(directivesObj[directive.name.value], name, value, variables);\n                });\n            }\n        });\n    }\n    var argObj = null;\n    if (field.arguments && field.arguments.length) {\n        argObj = {};\n        field.arguments.forEach(function (_a) {\n            var name = _a.name, value = _a.value;\n            return valueToObjectRepresentation(argObj, name, value, variables);\n        });\n    }\n    return getStoreKeyName(field.name.value, argObj, directivesObj);\n}\nvar KNOWN_DIRECTIVES = [\n    'connection',\n    'include',\n    'skip',\n    'client',\n    'rest',\n    'export',\n];\nexport var getStoreKeyName = Object.assign(function (fieldName, args, directives) {\n    if (args &&\n        directives &&\n        directives['connection'] &&\n        directives['connection']['key']) {\n        if (directives['connection']['filter'] &&\n            directives['connection']['filter'].length > 0) {\n            var filterKeys = directives['connection']['filter']\n                ? directives['connection']['filter']\n                : [];\n            filterKeys.sort();\n            var filteredArgs_1 = {};\n            filterKeys.forEach(function (key) {\n                filteredArgs_1[key] = args[key];\n            });\n            return \"\".concat(directives['connection']['key'], \"(\").concat(stringify(filteredArgs_1), \")\");\n        }\n        else {\n            return directives['connection']['key'];\n        }\n    }\n    var completeFieldName = fieldName;\n    if (args) {\n        var stringifiedArgs = stringify(args);\n        completeFieldName += \"(\".concat(stringifiedArgs, \")\");\n    }\n    if (directives) {\n        Object.keys(directives).forEach(function (key) {\n            if (KNOWN_DIRECTIVES.indexOf(key) !== -1)\n                return;\n            if (directives[key] && Object.keys(directives[key]).length) {\n                completeFieldName += \"@\".concat(key, \"(\").concat(stringify(directives[key]), \")\");\n            }\n            else {\n                completeFieldName += \"@\".concat(key);\n            }\n        });\n    }\n    return completeFieldName;\n}, {\n    setStringify: function (s) {\n        var previous = stringify;\n        stringify = s;\n        return previous;\n    },\n});\nvar stringify = function defaultStringify(value) {\n    return JSON.stringify(value, stringifyReplacer);\n};\nfunction stringifyReplacer(_key, value) {\n    if (isNonNullObject(value) && !Array.isArray(value)) {\n        value = Object.keys(value).sort().reduce(function (copy, key) {\n            copy[key] = value[key];\n            return copy;\n        }, {});\n    }\n    return value;\n}\nexport function argumentsObjectFromField(field, variables) {\n    if (field.arguments && field.arguments.length) {\n        var argObj_1 = {};\n        field.arguments.forEach(function (_a) {\n            var name = _a.name, value = _a.value;\n            return valueToObjectRepresentation(argObj_1, name, value, variables);\n        });\n        return argObj_1;\n    }\n    return null;\n}\nexport function resultKeyNameFromField(field) {\n    return field.alias ? field.alias.value : field.name.value;\n}\nexport function getTypenameFromResult(result, selectionSet, fragmentMap) {\n    if (typeof result.__typename === 'string') {\n        return result.__typename;\n    }\n    for (var _i = 0, _a = selectionSet.selections; _i < _a.length; _i++) {\n        var selection = _a[_i];\n        if (isField(selection)) {\n            if (selection.name.value === '__typename') {\n                return result[resultKeyNameFromField(selection)];\n            }\n        }\n        else {\n            var typename = getTypenameFromResult(result, getFragmentFromSelection(selection, fragmentMap).selectionSet, fragmentMap);\n            if (typeof typename === 'string') {\n                return typename;\n            }\n        }\n    }\n}\nexport function isField(selection) {\n    return selection.kind === 'Field';\n}\nexport function isInlineFragment(selection) {\n    return selection.kind === 'InlineFragment';\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}