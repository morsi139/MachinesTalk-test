{"ast":null,"code":"import { __assign, __spreadArray } from \"tslib\";\nimport { print } from 'graphql';\n;\nvar defaultHttpOptions = {\n  includeQuery: true,\n  includeExtensions: false,\n  preserveHeaderCase: false\n};\nvar defaultHeaders = {\n  accept: '*/*',\n  'content-type': 'application/json'\n};\nvar defaultOptions = {\n  method: 'POST'\n};\nexport var fallbackHttpConfig = {\n  http: defaultHttpOptions,\n  headers: defaultHeaders,\n  options: defaultOptions\n};\nexport var defaultPrinter = function (ast, printer) {\n  return printer(ast);\n};\nexport function selectHttpOptionsAndBody(operation, fallbackConfig) {\n  var configs = [];\n\n  for (var _i = 2; _i < arguments.length; _i++) {\n    configs[_i - 2] = arguments[_i];\n  }\n\n  configs.unshift(fallbackConfig);\n  return selectHttpOptionsAndBodyInternal.apply(void 0, __spreadArray([operation, defaultPrinter], configs, false));\n}\nexport function selectHttpOptionsAndBodyInternal(operation, printer) {\n  var configs = [];\n\n  for (var _i = 2; _i < arguments.length; _i++) {\n    configs[_i - 2] = arguments[_i];\n  }\n\n  var options = {};\n  var http = {};\n  configs.forEach(function (config) {\n    options = __assign(__assign(__assign({}, options), config.options), {\n      headers: __assign(__assign({}, options.headers), config.headers)\n    });\n\n    if (config.credentials) {\n      options.credentials = config.credentials;\n    }\n\n    http = __assign(__assign({}, http), config.http);\n  });\n\n  if (options.headers) {\n    options.headers = removeDuplicateHeaders(options.headers, http.preserveHeaderCase);\n  }\n\n  var operationName = operation.operationName,\n      extensions = operation.extensions,\n      variables = operation.variables,\n      query = operation.query;\n  var body = {\n    operationName: operationName,\n    variables: variables\n  };\n  if (http.includeExtensions) body.extensions = extensions;\n  if (http.includeQuery) body.query = printer(query, print);\n  return {\n    options: options,\n    body: body\n  };\n}\n;\n\nfunction removeDuplicateHeaders(headers, preserveHeaderCase) {\n  if (!preserveHeaderCase) {\n    var normalizedHeaders_1 = Object.create(null);\n    Object.keys(Object(headers)).forEach(function (name) {\n      normalizedHeaders_1[name.toLowerCase()] = headers[name];\n    });\n    return normalizedHeaders_1;\n  }\n\n  var headerData = Object.create(null);\n  Object.keys(Object(headers)).forEach(function (name) {\n    headerData[name.toLowerCase()] = {\n      originalName: name,\n      value: headers[name]\n    };\n  });\n  var normalizedHeaders = Object.create(null);\n  Object.keys(headerData).forEach(function (name) {\n    normalizedHeaders[headerData[name].originalName] = headerData[name].value;\n  });\n  return normalizedHeaders;\n}","map":{"version":3,"names":["__assign","__spreadArray","print","defaultHttpOptions","includeQuery","includeExtensions","preserveHeaderCase","defaultHeaders","accept","defaultOptions","method","fallbackHttpConfig","http","headers","options","defaultPrinter","ast","printer","selectHttpOptionsAndBody","operation","fallbackConfig","configs","_i","arguments","length","unshift","selectHttpOptionsAndBodyInternal","apply","forEach","config","credentials","removeDuplicateHeaders","operationName","extensions","variables","query","body","normalizedHeaders_1","Object","create","keys","name","toLowerCase","headerData","originalName","value","normalizedHeaders"],"sources":["F:/Bureau/Test_MachinesTalk/MachinesTalk/node_modules/@apollo/client/link/http/selectHttpOptionsAndBody.js"],"sourcesContent":["import { __assign, __spreadArray } from \"tslib\";\nimport { print } from 'graphql';\n;\nvar defaultHttpOptions = {\n    includeQuery: true,\n    includeExtensions: false,\n    preserveHeaderCase: false,\n};\nvar defaultHeaders = {\n    accept: '*/*',\n    'content-type': 'application/json',\n};\nvar defaultOptions = {\n    method: 'POST',\n};\nexport var fallbackHttpConfig = {\n    http: defaultHttpOptions,\n    headers: defaultHeaders,\n    options: defaultOptions,\n};\nexport var defaultPrinter = function (ast, printer) { return printer(ast); };\nexport function selectHttpOptionsAndBody(operation, fallbackConfig) {\n    var configs = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        configs[_i - 2] = arguments[_i];\n    }\n    configs.unshift(fallbackConfig);\n    return selectHttpOptionsAndBodyInternal.apply(void 0, __spreadArray([operation,\n        defaultPrinter], configs, false));\n}\nexport function selectHttpOptionsAndBodyInternal(operation, printer) {\n    var configs = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        configs[_i - 2] = arguments[_i];\n    }\n    var options = {};\n    var http = {};\n    configs.forEach(function (config) {\n        options = __assign(__assign(__assign({}, options), config.options), { headers: __assign(__assign({}, options.headers), config.headers) });\n        if (config.credentials) {\n            options.credentials = config.credentials;\n        }\n        http = __assign(__assign({}, http), config.http);\n    });\n    if (options.headers) {\n        options.headers = removeDuplicateHeaders(options.headers, http.preserveHeaderCase);\n    }\n    var operationName = operation.operationName, extensions = operation.extensions, variables = operation.variables, query = operation.query;\n    var body = { operationName: operationName, variables: variables };\n    if (http.includeExtensions)\n        body.extensions = extensions;\n    if (http.includeQuery)\n        body.query = printer(query, print);\n    return {\n        options: options,\n        body: body,\n    };\n}\n;\nfunction removeDuplicateHeaders(headers, preserveHeaderCase) {\n    if (!preserveHeaderCase) {\n        var normalizedHeaders_1 = Object.create(null);\n        Object.keys(Object(headers)).forEach(function (name) {\n            normalizedHeaders_1[name.toLowerCase()] = headers[name];\n        });\n        return normalizedHeaders_1;\n    }\n    var headerData = Object.create(null);\n    Object.keys(Object(headers)).forEach(function (name) {\n        headerData[name.toLowerCase()] = { originalName: name, value: headers[name] };\n    });\n    var normalizedHeaders = Object.create(null);\n    Object.keys(headerData).forEach(function (name) {\n        normalizedHeaders[headerData[name].originalName] = headerData[name].value;\n    });\n    return normalizedHeaders;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}