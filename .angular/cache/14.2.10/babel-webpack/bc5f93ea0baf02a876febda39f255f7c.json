{"ast":null,"code":"import { invariant } from \"../../utilities/globals/index.js\";\nexport function toPromise(observable) {\n  var completed = false;\n  return new Promise(function (resolve, reject) {\n    observable.subscribe({\n      next: function (data) {\n        if (completed) {\n          __DEV__ && invariant.warn(\"Promise Wrapper does not support multiple results from Observable\");\n        } else {\n          completed = true;\n          resolve(data);\n        }\n      },\n      error: reject\n    });\n  });\n}","map":{"version":3,"names":["invariant","toPromise","observable","completed","Promise","resolve","reject","subscribe","next","data","__DEV__","warn","error"],"sources":["F:/Bureau/Test_MachinesTalk/MachinesTalk/node_modules/@apollo/client/link/utils/toPromise.js"],"sourcesContent":["import { invariant } from \"../../utilities/globals/index.js\";\nexport function toPromise(observable) {\n    var completed = false;\n    return new Promise(function (resolve, reject) {\n        observable.subscribe({\n            next: function (data) {\n                if (completed) {\n                    __DEV__ && invariant.warn(\"Promise Wrapper does not support multiple results from Observable\");\n                }\n                else {\n                    completed = true;\n                    resolve(data);\n                }\n            },\n            error: reject,\n        });\n    });\n}\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,kCAA1B;AACA,OAAO,SAASC,SAAT,CAAmBC,UAAnB,EAA+B;EAClC,IAAIC,SAAS,GAAG,KAAhB;EACA,OAAO,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;IAC1CJ,UAAU,CAACK,SAAX,CAAqB;MACjBC,IAAI,EAAE,UAAUC,IAAV,EAAgB;QAClB,IAAIN,SAAJ,EAAe;UACXO,OAAO,IAAIV,SAAS,CAACW,IAAV,CAAe,mEAAf,CAAX;QACH,CAFD,MAGK;UACDR,SAAS,GAAG,IAAZ;UACAE,OAAO,CAACI,IAAD,CAAP;QACH;MACJ,CATgB;MAUjBG,KAAK,EAAEN;IAVU,CAArB;EAYH,CAbM,CAAP;AAcH"},"metadata":{},"sourceType":"module"}